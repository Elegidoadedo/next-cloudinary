{"version":3,"sources":["../../../next-cloudinary/src/components/CldImage/CldImage.tsx","../../../node_modules/@cloudinary-util/util/dist/index.mjs","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/url-gen/config/BaseConfig.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/url-gen/internal/internalConstants.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/url-gen/config/URLConfig.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/transformation-builder-sdk/internal/qualifier/QualifierValue.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/transformation-builder-sdk/internal/utils/unsupportedError.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/transformation-builder-sdk/internal/models/qualifierToJson.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/transformation-builder-sdk/internal/models/QualifierModel.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/transformation-builder-sdk/internal/qualifier/Qualifier.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/transformation-builder-sdk/qualifiers/flag/FlagQualifier.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/transformation-builder-sdk/internal/utils/dataStructureUtils.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/transformation-builder-sdk/internal/models/actionToJson.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/transformation-builder-sdk/internal/models/ActionModel.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/transformation-builder-sdk/internal/Action.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/transformation-builder-sdk/actions/background/actions/BackgroundColor.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/transformation-builder-sdk/internal/utils/prepareColor.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/transformation-builder-sdk/internal/RawAction.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/transformation-builder-sdk/internal/models/IErrorObject.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/transformation-builder-sdk/qualifiers/flag.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/transformation-builder-sdk/qualifiers/format/FormatQualifier.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/transformation-builder-sdk/internal/utils/objectFlip.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/transformation-builder-sdk/internal/internalConstants.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/transformation-builder-sdk/actions/delivery/DeliveryAction.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/transformation-builder-sdk/qualifiers/progressive.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/transformation-builder-sdk/actions/delivery/DeliveryFormatAction.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/transformation-builder-sdk/transformation/Transformation.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/transformation-builder-sdk/transformation/ImageTransformation.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/transformation-builder-sdk/transformation/VideoTransformation.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/url-gen/internal/url/urlUtils/isUrl.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/url-gen/internal/url/urlUtils/isFileName.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/url-gen/internal/url/urlUtils/publicIDContainsVersion.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/url-gen/internal/url/cloudinaryURL.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/url-gen/sdkAnalytics/stringPad.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/url-gen/sdkAnalytics/base64Map.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/url-gen/sdkAnalytics/reverseVersion.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/url-gen/sdkAnalytics/encodeVersion.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/url-gen/sdkAnalytics/getAnalyticsOptions.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/url-gen/internal/utils/packageVersion.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/url-gen/sdkAnalytics/getSDKAnalyticsSignature.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/url-gen/assets/CloudinaryFile.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/url-gen/assets/CloudinaryTransformable.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/url-gen/assets/CloudinaryImage.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/url-gen/assets/CloudinaryVideo.js","../../../node_modules/@cloudinary-util/url-loader/node_modules/@cloudinary/url-gen/instance/Cloudinary.js","../../../node_modules/@cloudinary-util/url-loader/dist/index.mjs","../../../next-cloudinary/src/lib/cloudinary.ts","../../../next-cloudinary/src/constants/analytics.ts","../../../next-cloudinary/package.json","../../../next-cloudinary/src/loaders/cloudinary-loader.ts","../../../next-cloudinary/src/components/CldOgImage/CldOgImage.tsx","../../../next-cloudinary/src/components/CldUploadButton/CldUploadButton.tsx","../../../next-cloudinary/src/components/CldUploadWidget/CldUploadWidget.tsx","../../../next-cloudinary/src/lib/util.ts","../../../next-cloudinary/src/components/CldVideoPlayer/CldVideoPlayer.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Image, { ImageProps } from 'next/image';\nimport { getTransformations } from '@cloudinary-util/util';\nimport { transformationPlugins } from '@cloudinary-util/url-loader';\nimport type { ImageOptions } from '@cloudinary-util/url-loader';\n\nimport { pollForProcessingImage } from '../../lib/cloudinary';\n\nimport { cloudinaryLoader } from '../../loaders/cloudinary-loader';\n\nexport type CldImageProps = Omit<ImageProps, 'src'> & ImageOptions & {\n  src: string;\n  preserveTransformations?: boolean;\n};\n\nconst CldImage = (props: CldImageProps) => {\n  const CLD_OPTIONS = [\n    'deliveryType',\n    'preserveTransformations'\n  ];\n\n  transformationPlugins.forEach(({ props = [] }) => {\n    props.forEach(prop => {\n      if ( CLD_OPTIONS.includes(prop) ) {\n        throw new Error(`Option ${prop} already exists!`);\n      }\n      CLD_OPTIONS.push(prop);\n    });\n  })\n\n  // Construct the base Image component props by filtering out Cloudinary-specific props\n\n  const imageProps = {\n    alt: props.alt,\n    src: props.src\n  };\n\n  (Object.keys(props) as Array<keyof typeof props>)\n    .filter(key => !CLD_OPTIONS.includes(key))\n    // @ts-expect-error\n    .forEach(key => imageProps[key] = props[key]);\n\n\n  const defaultImgKey = (Object.keys(imageProps) as Array<keyof typeof imageProps>).map(key => `${key}:${imageProps[key]}`).join(';');\n  const [imgKey, setImgKey] = useState(defaultImgKey);\n\n  // Construct Cloudinary-specific props by looking for values for any of the supported prop keys\n\n  const cldOptions = {};\n\n  CLD_OPTIONS.forEach(key => {\n    // @ts-expect-error\n    if ( props[key] ) {\n      // @ts-expect-error\n      cldOptions[key] = props[key] || undefined;\n    }\n  });\n\n  // Try to preserve the original transformations from the Cloudinary URL passed in\n  // to the component. This only works if the URL has a version number on it and otherwise\n  // will fail to load\n\n  if (props.preserveTransformations) {\n    try {\n      const transformations = getTransformations(props.src);\n      // @ts-expect-error\n      cldOptions.rawTransformations = [...transformations.flat(), ...(props.rawTransformations || [])];\n    } catch(e) {\n      console.warn(`Failed to preserve transformations: ${(e as Error).message}`)\n    }\n  }\n\n  /**\n   * handleOnError\n   */\n\n  interface HandleOnError {\n    target: any;\n  }\n\n  async function handleOnError(options: HandleOnError) {\n    const result = await pollForProcessingImage({ src: options.target.src })\n    if ( result ) {\n      setImgKey(`${defaultImgKey};${Date.now()}`);\n    }\n  }\n\n  return (\n    <Image\n      key={imgKey}\n      {...imageProps}\n      loader={(loaderOptions) => cloudinaryLoader({ loaderOptions, imageProps, cldOptions })}\n      onError={handleOnError}\n    />\n  );\n}\n\nexport default CldImage;\n","// src/lib/cloudinary.ts\nvar REGEX_VERSION = /\\/v\\d+\\//;\nvar REGEX_URL = /https?:\\/\\/(?<host>[^\\/]+)\\/(?<cloudName>[^\\/]+)\\/(?<assetType>image|images|video|videos|raw|files)\\/(?<deliveryType>upload|fetch|private|authenticated|sprite|facebook|twitter|youtube|vimeo)?\\/?(?<signature>s\\-\\-[a-zA-Z0-9]+\\-\\-)?\\/?(?<transformations>(?:[^_\\/]+_[^,\\/]+,?\\/?)*\\/)*(?<version>v\\d+|\\w{1,2})\\/(?<publicId>[^\\.^\\s]+)(?<format>\\.[a-zA-Z0-9]+$)?$/;\nvar ASSET_TYPES_SEO = [\"images\", \"videos\", \"files\"];\nfunction parseUrl(src) {\n  var _a, _b, _c, _d;\n  if (typeof src !== \"string\") {\n    throw new Error(`Failed to parse URL: Invalid src of type ${typeof src}`);\n  }\n  const hasVersion = REGEX_VERSION.test(src);\n  if (!hasVersion) {\n    throw new Error(`Invalid src: Does not include version (Ex: /v1234/)`);\n  }\n  const [baseUrl, queryString] = src.split(\"?\");\n  const results = baseUrl.match(REGEX_URL);\n  const transformations = (_b = (_a = results == null ? void 0 : results.groups) == null ? void 0 : _a.transformations) == null ? void 0 : _b.split(\"/\").filter((t) => !!t);\n  const parts = {\n    ...results == null ? void 0 : results.groups,\n    seoSuffix: void 0,\n    transformations: transformations || [],\n    queryParams: {},\n    version: ((_c = results == null ? void 0 : results.groups) == null ? void 0 : _c.version) ? parseInt(results.groups.version.replace(\"v\", \"\")) : void 0\n  };\n  if (queryString) {\n    parts.queryParams = queryString.split(\"&\").reduce((prev, curr) => {\n      const [key, value] = curr.split(\"=\");\n      prev[key] = value;\n      return prev;\n    }, {});\n  }\n  if (parts.assetType && ASSET_TYPES_SEO.includes(parts.assetType)) {\n    const publicIdParts = ((_d = parts.publicId) == null ? void 0 : _d.split(\"/\")) || [];\n    parts.seoSuffix = publicIdParts.pop();\n    parts.publicId = publicIdParts.join(\"/\");\n  }\n  return parts;\n}\nfunction getPublicId(src) {\n  const { publicId } = parseUrl(src) || {};\n  return publicId;\n}\nfunction getTransformations(src) {\n  const { transformations = [] } = parseUrl(src) || {};\n  return transformations.map((t) => t.split(\",\"));\n}\n\n// src/lib/util.ts\nfunction encodeBase64(value) {\n  if (typeof btoa === \"function\") {\n    return btoa(value);\n  }\n  if (typeof Buffer !== \"undefined\") {\n    return Buffer.from(value).toString(\"base64\");\n  }\n}\nfunction objectHasKey(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\nfunction sortByKey(array = [], key, type = \"asc\") {\n  function compare(a, b) {\n    let keyA = a[key];\n    let keyB = b[key];\n    if (typeof keyA === \"string\") {\n      keyA = keyA.toLowerCase();\n    }\n    if (typeof keyB === \"string\") {\n      keyB = keyB.toLowerCase();\n    }\n    if (keyA < keyB) {\n      return -1;\n    }\n    if (keyA > keyB) {\n      return 1;\n    }\n    return 0;\n  }\n  let newArray = [...array];\n  if (typeof key !== \"string\")\n    return newArray;\n  newArray = newArray.sort(compare);\n  if (type === \"desc\") {\n    return newArray.reverse();\n  }\n  return newArray;\n}\nexport {\n  encodeBase64,\n  getPublicId,\n  getTransformations,\n  objectHasKey,\n  parseUrl,\n  sortByKey\n};\n","/**\n *\n * @private\n * @param {any} a\n */\nfunction isObject(a) {\n    if (typeof a !== 'object' || a instanceof Array) {\n        return false;\n    }\n    else {\n        return true;\n    }\n}\nclass Config {\n    filterOutNonSupportedKeys(userProvidedConfig, validKeys) {\n        const obj = Object.create({});\n        if (isObject(userProvidedConfig)) {\n            Object.keys(userProvidedConfig).forEach((key) => {\n                if (validKeys.indexOf(key) >= 0) {\n                    obj[key] = userProvidedConfig[key];\n                }\n                else {\n                    console.warn('Warning - unsupported key provided to configuration: ', key);\n                }\n            });\n            return obj;\n        }\n        else {\n            return Object.create({});\n        }\n    }\n}\nexport default Config;\n","/**\n * This file is for internal constants only.\n * It is not intended for public use and is not part of the public API\n */\n/**\n * @private\n */\nexport const ALLOWED_URL_CONFIG = [\n    'cname',\n    'secureDistribution',\n    'privateCdn',\n    'signUrl',\n    'longUrlSignature',\n    'shorten',\n    'useRootPath',\n    'secure',\n    'forceVersion',\n    'analytics'\n];\n/**\n * @private\n */\nexport const ALLOWED_CLOUD_CONFIG = [\n    'cloudName',\n    'apiKey',\n    'apiSecret',\n    'authToken'\n];\n","import Config from \"./BaseConfig.js\";\nimport { ALLOWED_URL_CONFIG } from \"../internal/internalConstants.js\";\nclass URLConfig extends Config {\n    /**\n     * @param {IURLConfig} userURLConfig\n     */\n    constructor(userURLConfig) {\n        super();\n        const urlConfig = this.filterOutNonSupportedKeys(userURLConfig, ALLOWED_URL_CONFIG);\n        Object.assign(this, {\n            secure: true\n        }, urlConfig);\n    }\n    extend(userURLConfig) {\n        const urlConfig = this.filterOutNonSupportedKeys(userURLConfig, ALLOWED_URL_CONFIG);\n        return new URLConfig(Object.assign({}, this, urlConfig));\n    }\n    /**\n     * @param {string} value Sets the cname\n     */\n    setCname(value) {\n        this.cname = value;\n        return this;\n    }\n    /**\n     * @param {string} value Sets the secureDistribution\n     */\n    setSecureDistribution(value) {\n        this.secureDistribution = value;\n        return this;\n    }\n    /**\n     * @param {boolean} value Sets whether to use a private CDN (Removes cloudName from URL)\n     */\n    setPrivateCdn(value) {\n        this.privateCdn = value;\n        return this;\n    }\n    /**\n     * @param value Sets whether or not to sign the URL\n     */\n    setSignUrl(value) {\n        this.signUrl = value;\n        return this;\n    }\n    /**\n     * @param value Sets whether or not to use a long signature\n     */\n    setLongUrlSignature(value) {\n        this.longUrlSignature = value;\n        return this;\n    }\n    /**\n     * @param value Sets whether or not to shorten the URL\n     */\n    setShorten(value) {\n        this.shorten = value;\n        return this;\n    }\n    /**\n     * @param value Sets whether or not to use a root path\n     */\n    setUseRootPath(value) {\n        this.useRootPath = value;\n        return this;\n    }\n    /**\n     * @param value Sets whether or not to deliver the asset through https\n     */\n    setSecure(value) {\n        this.secure = value;\n        return this;\n    }\n    /**\n     * @param value Sets whether to force a version in the URL\n     */\n    setForceVersion(value) {\n        this.forceVersion = value;\n        return this;\n    }\n}\nexport default URLConfig;\n","/**\n * @summary SDK\n * @memberOf SDK\n */\nclass QualifierValue {\n    /**\n     *\n     * @param {QualifierValue | QualifierValue[] | any[] | string | number}qualifierValue\n     */\n    constructor(qualifierValue) {\n        this.values = [];\n        this.delimiter = ':'; // {value}{delimiter}{value}...\n        if (this.hasValue(qualifierValue)) {\n            this.addValue(qualifierValue);\n        }\n    }\n    /**\n     * @description Joins the provided values with the provided delimiter\n     */\n    toString() {\n        return this.values.join(this.delimiter);\n    }\n    /**\n     * @description Checks if the provided argument has a value\n     * @param {any} v\n     * @private\n     * @return {boolean}\n     */\n    hasValue(v) {\n        return typeof v !== 'undefined' && v !== null && v !== '';\n    }\n    /**\n     * @desc Adds a value for the this qualifier instance\n     * @param {any} value\n     * @return {this}\n     */\n    addValue(value) {\n        // Append value or array of values\n        if (Array.isArray(value)) {\n            this.values = this.values.concat(value);\n        }\n        else {\n            this.values.push(value);\n        }\n        // Remove falsy values\n        this.values = this.values.filter((v) => this.hasValue(v));\n        return this;\n    }\n    /**\n     * @description Sets the delimiter for this instance\n     * @param delimiter\n     */\n    setDelimiter(delimiter) {\n        this.delimiter = delimiter;\n        return this;\n    }\n}\nexport { QualifierValue };\n","class UnsupportedError extends Error {\n    constructor(message = 'Unsupported') {\n        super(message);\n    }\n}\n/**\n * Creates a new UnsupportedError\n * @param message\n */\nfunction createUnsupportedError(message) {\n    return new UnsupportedError(message);\n}\nexport { UnsupportedError, createUnsupportedError };\n","import { createUnsupportedError } from \"../utils/unsupportedError.js\";\n/**\n * Returns the action's model\n */\nexport function qualifierToJson() {\n    return this._qualifierModel || { error: createUnsupportedError(`unsupported qualifier ${this.constructor.name}`) };\n}\n","import { qualifierToJson } from \"./qualifierToJson.js\";\nexport class QualifierModel {\n    constructor() {\n        this._qualifierModel = {};\n    }\n    toJson() {\n        return qualifierToJson.apply(this);\n    }\n}\n","import { QualifierValue } from './QualifierValue.js';\nimport { QualifierModel } from '../models/QualifierModel.js';\n/**\n * @summary SDK\n * @memberOf SDK\n */\nclass Qualifier extends QualifierModel {\n    constructor(key, qualifierValue) {\n        super();\n        this.delimiter = '_'; // {key}{delimiter}{qualifierValue}\n        this.key = key;\n        if (qualifierValue instanceof QualifierValue) {\n            this.qualifierValue = qualifierValue;\n        }\n        else {\n            this.qualifierValue = new QualifierValue();\n            this.qualifierValue.addValue(qualifierValue);\n        }\n    }\n    toString() {\n        const { key, delimiter, qualifierValue } = this;\n        return `${key}${delimiter}${qualifierValue.toString()}`;\n    }\n    addValue(value) {\n        this.qualifierValue.addValue(value);\n        return this;\n    }\n}\nexport { Qualifier };\n","import { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\n * @memberOf Qualifiers.Flag\n * @extends {SDK.Qualifier}\n * @description the FlagQualifier class\n */\nclass FlagQualifier extends Qualifier {\n    constructor(flagType, flagValue) {\n        let qualifierValue;\n        if (flagValue) {\n            qualifierValue = new QualifierValue([flagType, `${flagValue}`]).setDelimiter(':');\n        }\n        else {\n            qualifierValue = flagType;\n        }\n        super('fl', qualifierValue);\n        this.flagValue = flagValue;\n    }\n    toString() {\n        return super.toString().replace(/\\./, '%2E');\n    }\n    getFlagValue() {\n        return this.flagValue;\n    }\n}\nexport { FlagQualifier };\n","/**\n * Sort a map by key\n * @private\n * @param map <string, any>\n * @Return array of map's values sorted by key\n */\nfunction mapToSortedArray(map, flags) {\n    const array = Array.from(map.entries());\n    // objects from the Array.from() method above are stored in array of arrays:\n    // [[qualifierKey, QualifierObj], [qualifierKey, QualifierObj]]\n    // Flags is an array of FlagQualifierObj\n    // We need to convert it to the same form: [flagQualifier] =>  ['fl', flagQualifier]\n    flags.forEach((flag) => {\n        array.push(['fl', flag]); // push ['fl', flagQualifier]\n    });\n    return array.sort().map((v) => v[1]);\n}\n/**\n * Checks if `value` is a string.\n * @private\n * @param {*} value The value to check.\n * @return {boolean} `true` if `value` is a string, else `false`.\n */\nfunction isString(value) {\n    return (typeof value === 'string' || value instanceof String);\n}\nexport { isString, mapToSortedArray };\n","import { createUnsupportedError } from \"../utils/unsupportedError.js\";\n/**\n * Returns the action's model\n */\nexport function actionToJson() {\n    const actionModelIsNotEmpty = this._actionModel && Object.keys(this._actionModel).length;\n    if (actionModelIsNotEmpty) {\n        return this._actionModel;\n    }\n    return { error: createUnsupportedError(`unsupported action ${this.constructor.name}`) };\n}\n","import { actionToJson } from \"./actionToJson.js\";\nexport class ActionModel {\n    constructor() {\n        this._actionModel = {};\n    }\n    toJson() {\n        return actionToJson.apply(this);\n    }\n}\n","import { FlagQualifier } from \"../qualifiers/flag/FlagQualifier.js\";\nimport { Qualifier } from \"./qualifier/Qualifier.js\";\nimport { mapToSortedArray } from \"./utils/dataStructureUtils.js\";\nimport { ActionModel } from \"./models/ActionModel.js\";\n/**\n * @summary SDK\n * @memberOf SDK\n * @description Defines the category of transformation to perform.\n */\nclass Action extends ActionModel {\n    constructor() {\n        super(...arguments);\n        // We're using map, to overwrite existing keys. for example:\n        // addParam(w_100).addQualifier(w_200) should result in w_200. and not w_100,w_200\n        this.qualifiers = new Map();\n        // Unlike regular qualifiers, there can be multiple flags in each url component /fl_1,fl_2/\n        // If the falgs are added to the qualifiers map, only a single flag could exist in a component (it's a map)\n        // So flags are stored separately until the very end because of that reason\n        this.flags = [];\n        this.delimiter = ','; // {qualifier}{delimiter}{qualifier} for example: `${'w_100'}${','}${'c_fill'}`\n        this.actionTag = ''; // A custom name tag to identify this action in the future\n    }\n    prepareQualifiers() { }\n    /**\n     * @description Returns the custom name tag that was given to this action\n     * @return {string}\n     */\n    getActionTag() {\n        return this.actionTag;\n    }\n    /**\n     * @description Sets the custom name tag for this action\n     * @return {this}\n     */\n    setActionTag(tag) {\n        this.actionTag = tag;\n        return this;\n    }\n    /**\n     * @description Calls toString() on all child qualifiers (implicitly by using .join()).\n     * @return {string}\n     */\n    toString() {\n        this.prepareQualifiers();\n        return mapToSortedArray(this.qualifiers, this.flags).join(this.delimiter);\n    }\n    /**\n     * @description Adds the parameter to the action.\n     * @param {SDK.Qualifier} qualifier\n     * @return {this}\n     */\n    addQualifier(qualifier) {\n        // if string, find the key and value\n        if (typeof qualifier === 'string') {\n            const [key, value] = qualifier.toLowerCase().split('_');\n            if (key === 'fl') {\n                // if string qualifier is a flag, store it in the flags arrays\n                this.flags.push(new FlagQualifier(value));\n            }\n            else {\n                // if the string qualifier is not a flag, create a new qualifier from it\n                this.qualifiers.set(key, new Qualifier(key, value));\n            }\n        }\n        else {\n            // if a qualifier object, insert to the qualifiers map\n            this.qualifiers.set(qualifier.key, qualifier);\n        }\n        return this;\n    }\n    /**\n     * @description Adds a flag to the current action.\n     * @param {Qualifiers.Flag} flag\n     * @return {this}\n     */\n    addFlag(flag) {\n        if (typeof flag === 'string') {\n            this.flags.push(new FlagQualifier(flag));\n        }\n        else {\n            if (flag instanceof FlagQualifier) {\n                this.flags.push(flag);\n            }\n        }\n        return this;\n    }\n    addValueToQualifier(qualifierKey, qualifierValue) {\n        this.qualifiers.get(qualifierKey).addValue(qualifierValue);\n        return this;\n    }\n}\nexport { Action };\n","import { Action } from \"../../../internal/Action.js\";\nimport { QualifierValue } from \"../../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../../internal/qualifier/Qualifier.js\";\n/**\n * @extends SDK.Action\n * @description A class for background transformations.\n */\nclass BackgroundColor extends Action {\n    constructor(color) {\n        super();\n        this.addQualifier(new Qualifier('b', new QualifierValue(color).setDelimiter('_')));\n    }\n}\nexport { BackgroundColor };\n","/**\n * Returns RGB or Color\n * @private\n * @param color\n */\nexport function prepareColor(color) {\n    if (color) {\n        return color.match(/^#/) ? `rgb:${color.substr(1)}` : color;\n    }\n    else {\n        return color;\n    }\n}\n","import { createUnsupportedError } from \"./utils/unsupportedError.js\";\n/**\n * @summary SDK\n * @memberOf SDK\n * @description Defines an action that's a string literal, no validations or manipulations are performed\n */\nclass RawAction {\n    constructor(raw) {\n        this.raw = raw;\n    }\n    toString() {\n        return this.raw;\n    }\n    toJson() {\n        return { error: createUnsupportedError(`unsupported action ${this.constructor.name}`) };\n    }\n}\nexport { RawAction };\n","/**\n * Validates obj is an instance of IErrorObject\n * @param obj\n */\nfunction isErrorObject(obj) {\n    const errorObj = obj;\n    return ('error' in errorObj) && !!errorObj.error;\n}\nexport { isErrorObject };\n","/**\n * @description Defines flags that you can use to alter the default transformation behavior.\n * @namespace Flag\n * @memberOf Qualifiers\n */\nimport { FlagQualifier } from \"./flag/FlagQualifier.js\";\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Used when delivering a video file as an image format that supports animation, such as animated WebP.\n * Plays all frames rather than just delivering the first one as a static image.\n * Use this flag in addition to the flag or parameter controlling the delivery format,\n * for example f_auto or fl_awebp.\n\n * Note: When delivering a video in GIF format, it is delivered as an animated GIF by default and this flag is not\n * necessary. To deliver a single frame of a video in GIF format, use the page parameter.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction animated() {\n    return new FlagQualifier('animated');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description When converting animated images to WebP format, generate an animated WebP from all the frames in the\n * original\n * animated file instead of only from the first still frame.\n *\n * Note that animated WebPs are not supported in all browsers and versions.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction animatedWebP() {\n    return new FlagQualifier('awebp');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description When used together with automatic quality (q_auto):\n * allow switching to PNG8 encoding if the quality algorithm decides that it's more efficient.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction anyFormat() {\n    return new FlagQualifier('any_format');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description When converting animated images to PNG format, generates an animated PNG from all the frames in the\n * original\n * animated file instead of only from the first still frame.\n *\n * Note that animated PNGs are not supported in all browsers and versions.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction animatedPng() {\n    return new FlagQualifier('apng');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Trims pixels according to a clipping path included in the original image\n * (e.g., manually created using PhotoShop).\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction clip() {\n    return new FlagQualifier('clip');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Trims pixels according to a clipping path included in the original image (e.g., manually created\n * using PhotoShop)\n * using an evenodd clipping rule.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction clipEvenOdd() {\n    return new FlagQualifier('clip_evenodd');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Instructs Cloudinary to clear all image meta-data (IPTC, Exif and XMP) while applying an incoming\n * transformation.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction forceStrip() {\n    return new FlagQualifier('force_strip');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Allows custom flag\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction custom(value) {\n    return new FlagQualifier(value);\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Adds ICC color space metadata to the image, even when the original image doesn't contain any ICC data.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction forceIcc() {\n    return new FlagQualifier('force_icc');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Delivers the image as an attachment.\n * @param {string} filename The attachment's filename\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction attachment(filename) {\n    return new FlagQualifier('attachment', filename);\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Returns metadata of the input asset and of the transformed output asset in JSON instead of the\n * transformed image.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction getInfo() {\n    return new FlagQualifier('getinfo');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Deliver an HLS adaptive bitrate streaming file as HLS v3 instead of the default version (HLS v4).\n * Delivering in this format requires a private CDN configuration.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction hlsv3() {\n    return new FlagQualifier('hlsv3');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Sets the cache-control to immutable for the asset.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction immutableCache() {\n    return new FlagQualifier('immutable_cache');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description * Allows specifying only either width or height so the value of the second axis remains as is, and is not\n * recalculated to maintain the aspect ratio of the original image.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction ignoreInitialAspectRatio() {\n    return new FlagQualifier('ignore_aspect_ratio');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Keeps the copyright related fields when stripping meta-data.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction keepAttribution() {\n    return new FlagQualifier('keep_attribution');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * Keep the Display Aspect Ratio metadata of the uploaded video (if it’s different from the current video\n * dimensions).\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction keepDar() {\n    return new FlagQualifier('keep_dar');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Keeps all meta-data.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction keepIptc() {\n    return new FlagQualifier('keep_iptc');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Applies all chained transformations, until a transformation component that includes this flag, on the last added\n * overlay or underlay instead of applying on the containing image.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction layerApply() {\n    return new FlagQualifier('layer_apply');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Automatically use lossy compression when delivering animated GIF files.\n *\n * This flag can also be used as a conditional flag for delivering PNG files: it tells Cloudinary to deliver the\n * image in PNG format (as requested) unless there is no transparency channel - in which case deliver in JPEG\n * format.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction lossy() {\n    return new FlagQualifier('lossy');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Convert the audio channel to mono\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction mono() {\n    return new FlagQualifier('mono');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Used internally by Position within an Overlay, this flag will tile the overlay across your image.\n *\n * <b>Learn more:</b> {@link https://cloudinary.com/documentation/transformation_reference#fl_no_overflow|Overflow in overlays}\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction noOverflow() {\n    return new FlagQualifier('no_overflow');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Don't stream a video that is currently being generated on the fly. Wait until the video is fully generated.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction noStream() {\n    return new FlagQualifier('no_stream');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Generate PNG images in the png24 format.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction png24() {\n    return new FlagQualifier('png24');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Generate PNG images in the png32 format.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction png32() {\n    return new FlagQualifier('png32');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Generate PNG images in the PNG8 format.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction png8() {\n    return new FlagQualifier('png8');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description When used with automatic fetch_format (f_auto): ensures that images with a transparency channel will be\n * delivered in PNG format.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction preserveTransparency() {\n    return new FlagQualifier('preserve_transparency');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Generates a JPG image using the progressive (interlaced) JPG format.\n *\n * This format allows the browser to quickly show a low-quality rendering of the image until the full-quality\n * image is loaded.\n *\n * @param {string} mode? The mode to determine a specific progressive outcome as follows:\n * * semi - A smart optimization of the decoding time, compression level and progressive rendering\n *          (less iterations). This is the default mode when using q_auto.\n * * steep - Delivers a preview very quickly, and in a single later phase improves the image to\n *           the required resolution.\n * * none  - Use this to deliver a non-progressive image. This is the default mode when setting\n *           a specific value for quality.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction progressive(mode) {\n    return new FlagQualifier('progressive', mode);\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Modifies percentage-based width & height parameters of overlays and underlays (e.g., 1.0) to be relative to the overlaid region\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction regionRelative() {\n    return new FlagQualifier('region_relative');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Reduces the image to one flat pixelated layer (as opposed to the default vector based graphic) in\n * order to enable\n * PDF resizing and overlay manipulations.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction rasterize() {\n    return new FlagQualifier('rasterize');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Modifies percentage-based width & height parameters of overlays and underlays (e.g., 1.0) to be relative to the containing image instead of the added layer.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction relative() {\n    return new FlagQualifier('relative');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Instructs Cloudinary to run a sanitizer on the image (relevant only for the SVG format).\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction sanitize() {\n    return new FlagQualifier('sanitize');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Splices the video stipulated as an overlay on to the end of the container video instead of adding it as an\n * overlay.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction splice() {\n    return new FlagQualifier('splice');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Instructs Cloudinary to clear all ICC color profile data included with the image.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction stripProfile() {\n    return new FlagQualifier('strip_profile');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description If the requested video transformation has already been generated, this flag works identically to\n * Flag::attachment.\n *\n *  However, if the video transformation is being requested for the first time, this flag causes the video download\n * to begin immediately, streaming it as a fragmented video file.\n *\n * In contrast, if the regular fl_attachment flag is used when a user requests a new video transformation,\n * the download will begin only after the complete transformed video has been generated.\n *\n * Most standard video players successfully play fragmented video files without issue.\n *\n * @param {string} filename The attachment's filename\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction streamingAttachment(filename) {\n    return new FlagQualifier('streaming_attachment', filename);\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Generates TIFF images using LZW compression and in the TIFF8 format.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction tiff8Lzw() {\n    return new FlagQualifier('tiff8_lzw');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Used internally by Position within an Overlay, this flag will tile the overlay across your image.\n *\n * <b>Learn more:</b> {@link https://cloudinary.com/documentation/layers#automatic_tiling|Tiling overlay}\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction tiled() {\n    return new FlagQualifier('tiled');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Truncate (trim) a video file based on the start time defined in the metadata (relevant only where the metadata\n * includes a directive to play only a section of the video).\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction truncateTS() {\n    return new FlagQualifier('truncate_ts');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Create a waveform image (in the format specified by the file extension) from the audio or video file.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction waveform() {\n    return new FlagQualifier('waveform');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description A qualifier that ensures that an alpha channel is not applied to a TIFF image if it is a mask channel.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction ignoreMaskChannels() {\n    return new FlagQualifier('ignore_mask_channels');\n}\nconst Flag = {\n    animated, anyFormat, animatedPng, animatedWebP,\n    clipEvenOdd, lossy, preserveTransparency, png8, png24, png32, progressive, rasterize,\n    sanitize, stripProfile, tiff8Lzw, attachment, forceIcc, forceStrip, getInfo, immutableCache,\n    keepAttribution, keepIptc, custom, streamingAttachment, hlsv3, keepDar, noStream, mono,\n    layerApply, relative, regionRelative, splice, truncateTS, waveform, ignoreInitialAspectRatio, clip,\n    tiled, noOverflow, ignoreMaskChannels\n};\nexport { Flag, animated, anyFormat, animatedPng, animatedWebP, clipEvenOdd, lossy, preserveTransparency, png8, png24, png32, progressive, rasterize, sanitize, stripProfile, tiff8Lzw, attachment, forceIcc, forceStrip, getInfo, immutableCache, keepAttribution, keepIptc, custom, streamingAttachment, hlsv3, keepDar, noStream, mono, layerApply, relative, regionRelative, splice, truncateTS, waveform, ignoreInitialAspectRatio, clip, tiled, noOverflow, ignoreMaskChannels };\n","import { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\n/**\n * @memberOf Qualifiers.Format\n * @extends {SDK.QualifierValue}\n */\nclass FormatQualifier extends QualifierValue {\n    constructor(val) {\n        super(val);\n        this.val = val;\n    }\n    getValue() {\n        return this.val;\n    }\n}\nexport { FormatQualifier };\n","/**\n * Flip keys and values for given object\n * @param obj\n */\nfunction objectFlip(obj) {\n    const result = {};\n    Object.keys(obj).forEach((key) => {\n        result[obj[key]] = key;\n    });\n    return result;\n}\nexport { objectFlip };\n","/**\n * This file is for internal constants only.\n * It is not intended for public use and is not part of the public API\n */\nimport { objectFlip } from \"./utils/objectFlip.js\";\nexport const CONDITIONAL_OPERATORS = {\n    \"=\": \"eq\",\n    \"!=\": \"ne\",\n    \"<\": \"lt\",\n    \">\": \"gt\",\n    \"<=\": \"lte\",\n    \">=\": \"gte\",\n    \"&&\": \"and\",\n    \"||\": \"or\",\n    \"*\": \"mul\",\n    \"/\": \"div\",\n    \"+\": \"add\",\n    \"-\": \"sub\",\n    \"^\": \"pow\"\n};\nexport const RESERVED_NAMES = {\n    \"aspect_ratio\": \"ar\",\n    \"aspectRatio\": \"ar\",\n    \"current_page\": \"cp\",\n    \"currentPage\": \"cp\",\n    \"duration\": \"du\",\n    \"face_count\": \"fc\",\n    \"faceCount\": \"fc\",\n    \"height\": \"h\",\n    \"initial_aspect_ratio\": \"iar\",\n    \"initial_height\": \"ih\",\n    \"initial_width\": \"iw\",\n    \"initialAspectRatio\": \"iar\",\n    \"initialHeight\": \"ih\",\n    \"initialWidth\": \"iw\",\n    \"initial_duration\": \"idu\",\n    \"initialDuration\": \"idu\",\n    \"page_count\": \"pc\",\n    \"page_x\": \"px\",\n    \"page_y\": \"py\",\n    \"pageCount\": \"pc\",\n    \"pageX\": \"px\",\n    \"pageY\": \"py\",\n    \"tags\": \"tags\",\n    \"width\": \"w\",\n    \"trimmed_aspect_ratio\": \"tar\",\n    \"current_public_id\": \"cpi\",\n    \"initial_density\": \"idn\",\n    \"page_names\": \"pgnames\"\n};\nexport const ACTION_TYPE_TO_CROP_MODE_MAP = {\n    limitFit: 'limit',\n    limitFill: 'lfill',\n    minimumFit: 'mfit',\n    thumbnail: 'thumb',\n    limitPad: 'lpad',\n    minimumPad: 'mpad'\n};\nexport const ACTION_TYPE_TO_DELIVERY_MODE_MAP = {\n    colorSpace: 'cs',\n    dpr: 'dpr',\n    density: 'dn',\n    defaultImage: 'd',\n    format: 'f',\n    quality: 'q'\n};\nexport const ACTION_TYPE_TO_EFFECT_MODE_MAP = {\n    redEye: 'redeye',\n    advancedRedEye: 'adv_redeye',\n    oilPaint: 'oil_paint',\n    unsharpMask: 'unsharp_mask',\n    makeTransparent: 'make_transparent'\n};\nexport const ACTION_TYPE_TO_QUALITY_MODE_MAP = {\n    autoBest: 'auto:best',\n    autoEco: 'auto:eco',\n    autoGood: 'auto:good',\n    autoLow: 'auto:low',\n    jpegminiHigh: 'jpegmini:1',\n    jpegminiMedium: 'jpegmini:2',\n    jpegminiBest: 'jpegmini:0'\n};\nexport const ACTION_TYPE_TO_STREAMING_PROFILE_MODE_MAP = {\n    fullHd: 'full_hd',\n    fullHdWifi: 'full_hd_wifi',\n    fullHdLean: 'full_hd_lean',\n    hdLean: 'hd_lean'\n};\nexport const CHROMA_VALUE_TO_CHROMA_MODEL_ENUM = {\n    444: \"CHROMA_444\",\n    420: \"CHROMA_420\"\n};\nexport const COLOR_SPACE_MODEL_MODE_TO_COLOR_SPACE_MODE_MAP = {\n    'noCmyk': 'no_cmyk',\n    'keepCmyk': 'keep_cmyk',\n    'tinySrgb': 'tinysrgb',\n    'srgbTrueColor': 'srgb:truecolor'\n};\nexport const ACTION_TYPE_TO_BLEND_MODE_MAP = {\n    'antiRemoval': 'anti_removal'\n};\nexport const CHROMA_MODEL_ENUM_TO_CHROMA_VALUE = objectFlip(CHROMA_VALUE_TO_CHROMA_MODEL_ENUM);\nexport const COLOR_SPACE_MODE_TO_COLOR_SPACE_MODEL_MODE_MAP = objectFlip(COLOR_SPACE_MODEL_MODE_TO_COLOR_SPACE_MODE_MAP);\nexport const CROP_MODE_TO_ACTION_TYPE_MAP = objectFlip(ACTION_TYPE_TO_CROP_MODE_MAP);\nexport const DELIVERY_MODE_TO_ACTION_TYPE_MAP = objectFlip(ACTION_TYPE_TO_DELIVERY_MODE_MAP);\nexport const EFFECT_MODE_TO_ACTION_TYPE_MAP = objectFlip(ACTION_TYPE_TO_EFFECT_MODE_MAP);\nexport const QUALITY_MODE_TO_ACTION_TYPE_MAP = objectFlip(ACTION_TYPE_TO_QUALITY_MODE_MAP);\nexport const STREAMING_PROFILE_TO_ACTION_TYPE_MAP = objectFlip(ACTION_TYPE_TO_STREAMING_PROFILE_MODE_MAP);\n","import { Action } from \"../../internal/Action.js\";\nimport { FormatQualifier } from \"../../qualifiers/format/FormatQualifier.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { DELIVERY_MODE_TO_ACTION_TYPE_MAP } from \"../../internal/internalConstants.js\";\n/**\n * @description Qualifies the delivery of an asset.\n * @memberOf Actions.Delivery\n * @extends SDK.Action\n */\nclass DeliveryAction extends Action {\n    /**\n     * @param {string} deliveryKey A generic Delivery Action Key (such as q, f, dn, etc.)\n     * @param {string} deliveryType A Format Qualifiers for the action, such as Quality.auto()\n     * @param {string} modelProperty internal model property of the action, for example quality uses `level` while dpr uses `density`\n     * @see Visit {@link Actions.Delivery|Delivery} for an example\n     */\n    constructor(deliveryKey, deliveryType, modelProperty) {\n        super();\n        this._actionModel = {};\n        let deliveryTypeValue;\n        if (deliveryType instanceof FormatQualifier) {\n            deliveryTypeValue = deliveryType.getValue();\n        }\n        else {\n            deliveryTypeValue = deliveryType;\n        }\n        this._actionModel.actionType = DELIVERY_MODE_TO_ACTION_TYPE_MAP[deliveryKey];\n        this._actionModel[modelProperty] = deliveryTypeValue;\n        this.addQualifier(new Qualifier(deliveryKey, deliveryType));\n    }\n}\nexport { DeliveryAction };\n","/**\n * @description Contains functions to select the mode when using a progressive format.\n * <b>Learn more</b>: {@link https://cloudinary.com/documentation/transformation_reference#fl_progressive|Progressive modes}\n * @memberOf Qualifiers\n * @namespace Progressive\n * @example\n * import {Cloudinary} from \"@cloudinary/url-gen\";\n * import {format} from \"@cloudinary/url-gen/actions/delivery\";\n * import {jpg} from \"@cloudinary/url-gen/qualifiers/format\";\n * import {steep} from \"@cloudinary/url-gen/qualifiers/progressive\";\n *\n * const yourCldInstance = new Cloudinary({cloud: {cloudName: 'demo'}});\n * const image = yourCldInstance.image('woman');\n * image.delivery(format(jpg()).progressive(steep()))\n */\nimport { FlagQualifier } from \"./flag/FlagQualifier.js\";\nclass ProgressiveQualifier extends FlagQualifier {\n    constructor(mode) {\n        super('progressive', mode);\n    }\n}\n/**\n * @memberOf Qualifiers.Progressive\n */\nfunction none() {\n    return new ProgressiveQualifier('none');\n}\n/**\n * @memberOf Qualifiers.Progressive\n */\nfunction semi() {\n    return new ProgressiveQualifier('semi');\n}\n/**\n * @memberOf Qualifiers.Progressive\n */\nfunction steep() {\n    return new ProgressiveQualifier('steep');\n}\n/**\n * @memberOf Qualifiers.Progressive\n */\nfunction progressive() {\n    return new ProgressiveQualifier();\n}\nconst Progressive = {\n    semi,\n    none,\n    steep,\n    progressive,\n    ProgressiveQualifier\n};\nexport { Progressive, semi, none, steep, progressive, ProgressiveQualifier };\n","import { lossy, preserveTransparency, progressive } from \"../../qualifiers/flag.js\";\nimport { DeliveryAction } from \"./DeliveryAction.js\";\nimport { ProgressiveQualifier } from \"../../qualifiers/progressive.js\";\n/**\n * @memberOf Actions.Delivery\n * @extends {Actions.Delivery.DeliveryAction}\n * @see Visit {@link Actions.Delivery|Delivery} for an example\n */\nclass DeliveryFormatAction extends DeliveryAction {\n    constructor(deliveryKey, deliveryType) {\n        super(deliveryKey, deliveryType, 'formatType');\n    }\n    /**\n     * @description Uses lossy compression when delivering animated GIF files.\n     * @return {this}\n     */\n    lossy() {\n        this._actionModel.lossy = true;\n        this.addFlag(lossy());\n        return this;\n    }\n    /**\n     * @description Uses progressive compression when delivering JPG file format.\n     * @return {this}\n     */\n    progressive(mode) {\n        if (mode instanceof ProgressiveQualifier) {\n            this._actionModel.progressive = { mode: mode.getFlagValue() };\n            this.addFlag(mode);\n        }\n        else {\n            this._actionModel.progressive = { mode: mode };\n            this.addFlag(progressive(mode));\n        }\n        return this;\n    }\n    /**\n     * @description Ensures that images with a transparency channel are delivered in PNG format.\n     */\n    preserveTransparency() {\n        this._actionModel.preserveTransparency = true;\n        this.addFlag(preserveTransparency());\n        return this;\n    }\n    static fromJson(actionModel) {\n        const { formatType, lossy, progressive, preserveTransparency } = actionModel;\n        let result;\n        if (formatType) {\n            result = new this('f', formatType);\n        }\n        else {\n            result = new this('f');\n        }\n        if (progressive) {\n            if (progressive.mode) {\n                result.progressive(progressive.mode);\n            }\n            else {\n                result.progressive();\n            }\n        }\n        lossy && result.lossy();\n        preserveTransparency && result.preserveTransparency();\n        return result;\n    }\n}\nexport { DeliveryFormatAction };\n","import { Action } from \"../internal/Action.js\";\nimport { BackgroundColor } from \"../actions/background/actions/BackgroundColor.js\";\nimport { prepareColor } from \"../internal/utils/prepareColor.js\";\nimport { FlagQualifier } from \"../qualifiers/flag/FlagQualifier.js\";\nimport { RawAction } from \"../internal/RawAction.js\";\nimport { isErrorObject } from \"../internal/models/IErrorObject.js\";\nimport { DeliveryFormatAction } from \"../actions/delivery/DeliveryFormatAction.js\";\n/**\n * @summary SDK\n * @description - Defines how to transform an asset\n * @memberOf SDK\n */\nclass Transformation {\n    constructor() {\n        this.actions = [];\n    }\n    /**\n     * @param {SDK.Action | string} action\n     * @return {this}\n     */\n    addAction(action) {\n        let actionToAdd;\n        if (typeof action === 'string') {\n            if (action.indexOf('/') >= 0) {\n                throw 'addAction cannot accept a string with a forward slash in it - /, use .addTransformation() instead';\n            }\n            else {\n                actionToAdd = new RawAction(action);\n            }\n        }\n        else {\n            actionToAdd = action;\n        }\n        this.actions.push(actionToAdd);\n        return this;\n    }\n    /**\n     * @description Allows the injection of a raw transformation as a string into the transformation, or a Transformation instance that was previously created\n     * @param {string | SDK.Transformation} tx\n     * @example\n     * import {Transformation} from \"@cloudinary/url-gen\";\n     *\n     * const transformation = new Transformation();\n     * transformation.addTransformation('w_100/w_200/w_300');\n     * @return {this}\n     */\n    addTransformation(tx) {\n        if (tx instanceof Transformation) {\n            // Concat the new actions into the existing actions\n            this.actions = this.actions.concat(tx.actions);\n        }\n        else {\n            this.actions.push(new RawAction(tx));\n        }\n        return this;\n    }\n    /**\n     * @return {string}\n     */\n    toString() {\n        return this.actions\n            .map((action) => {\n            return action.toString();\n        })\n            .filter((a) => a)\n            .join('/');\n    }\n    /**\n     * @description Delivers an animated GIF.\n     * @param {AnimatedAction} animatedAction\n     * @return {this}\n     */\n    animated(animatedAction) {\n        return this.addAction(animatedAction);\n    }\n    /**\n     * @description Adds a border around the image.\n     * @param {Border} borderAction\n     * @return {this}\n     */\n    border(borderAction) {\n        return this.addAction(borderAction);\n    }\n    /**\n     * @description Adjusts the shape of the delivered image. </br>\n     * <b>Learn more:</b> {@link https://cloudinary.com/documentation/effects_and_artistic_enhancements#distort|Shape changes and distortion effects}\n     * @param {IReshape} reshapeAction\n     * @return {this}\n     */\n    reshape(reshapeAction) {\n        return this.addAction(reshapeAction);\n    }\n    /**\n     * @description Resize the asset using provided resize action\n     * @param {ResizeSimpleAction} resizeAction\n     * @return {this}\n     */\n    resize(resizeAction) {\n        return this.addAction(resizeAction);\n    }\n    /**\n     * @desc An alias to Action Delivery.quality\n     * @param {string|number} quality\n     * @return {this}\n     */\n    quality(quality) {\n        this.addAction(new DeliveryFormatAction('q', quality));\n        return this;\n    }\n    /**\n     * @desc An alias to Action Delivery.format\n     * @param {string} format\n     * @return {this}\n     */\n    format(format) {\n        this.addAction(new DeliveryFormatAction('f', format));\n        return this;\n    }\n    /**\n     * @description Rounds the specified corners of an image.\n     * @param roundCornersAction\n     * @return {this}\n     */\n    roundCorners(roundCornersAction) {\n        return this.addAction(roundCornersAction);\n    }\n    /**\n     * @description Adds an overlay over the base image.\n     * @param {LayerAction} overlayAction\n     * @return {this}\n     */\n    overlay(overlayAction) {\n        return this.addAction(overlayAction);\n    }\n    /**\n     * @description Adds an underlay under the base image.\n     * @param {LayerAction} underlayAction\n     * @return {this}\n     */\n    underlay(underlayAction) {\n        underlayAction.setLayerType('u');\n        return this.addAction(underlayAction);\n    }\n    /**\n     * @description Defines an new user variable.\n     * @param {VariableAction} variableAction\n     * @return {this}\n     */\n    addVariable(variableAction) {\n        return this.addAction(variableAction);\n    }\n    /**\n     * @description Specifies a condition to be met before applying a transformation.\n     * @param {ConditionalAction} conditionAction\n     * @return {this}\n     */\n    conditional(conditionAction) {\n        return this.addAction(conditionAction);\n    }\n    /**\n     * @description Applies a filter or an effect on an asset.\n     * @param {SimpleEffectAction} effectAction\n     * @return {this}\n     */\n    effect(effectAction) {\n        return this.addAction(effectAction);\n    }\n    /**\n     * @description Applies adjustment effect on an asset.\n     * @param action\n     * @return {this}\n     */\n    adjust(action) {\n        return this.addAction(action);\n    }\n    /**\n     * @description Rotates the asset by the given angle.\n     * @param {RotateAction} rotateAction\n     * @return {this}\n     */\n    rotate(rotateAction) {\n        return this.addAction(rotateAction);\n    }\n    /**\n     * @description Applies a pre-defined named transformation of the given name.\n     * @param {NamedTransformation} namedTransformation\n     * @return {this}\n     */\n    namedTransformation(namedTransformation) {\n        return this.addAction(namedTransformation);\n    }\n    /**\n     * @description Applies delivery action.\n     * @param deliveryAction\n     * @return {this}\n     */\n    delivery(deliveryAction) {\n        return this.addAction(deliveryAction);\n    }\n    /**\n     * @description Sets the color of the background.\n     * @param {Qualifiers.Color} color\n     * @return {this}\n     */\n    backgroundColor(color) {\n        return this.addAction(new BackgroundColor(prepareColor(color)));\n    }\n    /**\n     * @description Adds a layer in a Photoshop document.\n     * @param action\n     * @return {this}\n     */\n    psdTools(action) {\n        return this.addAction(action);\n    }\n    /**\n     * @description Extracts an image or a page using an index, a range, or a name from a layered media asset.\n     * @param action\n     * @return {this}\n     */\n    extract(action) {\n        return this.addAction(action);\n    }\n    /**\n     * @description Adds a flag as a separate action.\n     * @param {Qualifiers.Flag | string} flagQualifier\n     * @return {this}\n     */\n    addFlag(flagQualifier) {\n        const action = new Action();\n        let flagToAdd = flagQualifier;\n        if (typeof flagQualifier === 'string') {\n            flagToAdd = new FlagQualifier(flagQualifier);\n        }\n        action.addQualifier(flagToAdd);\n        return this.addAction(action);\n    }\n    /**\n     * @description Inject a custom function into the image transformation pipeline.\n     * @return {this}\n     */\n    customFunction(customFunction) {\n        return this.addAction(customFunction);\n    }\n    /**\n     * Transcodes the video (or audio) to another format.\n     * @param {Action} action\n     * @return {this}\n     */\n    transcode(action) {\n        return this.addAction(action);\n    }\n    /**\n     * Applies the specified video edit action.\n     *\n     * @param {videoEditType} action\n     * @return {this}\n     */\n    videoEdit(action) {\n        return this.addAction(action);\n    }\n    toJson() {\n        const actions = [];\n        for (const action of this.actions) {\n            const json = action.toJson();\n            if (isErrorObject(json)) {\n                // Fail early and return an IErrorObject\n                return json;\n            }\n            actions.push(json);\n        }\n        return { actions };\n    }\n}\nexport { Transformation };\n","import { Transformation } from \"./Transformation.js\";\n/**\n * @summary SDK\n * @extends {SDK.Transformation}\n * @memberOf SDK\n */\nclass ImageTransformation extends Transformation {\n}\nexport { ImageTransformation };\n","import { Transformation } from \"./Transformation.js\";\n/**\n * @summary SDK\n * @extends {SDK.Transformation}\n * @memberOf SDK\n */\nclass VideoTransformation extends Transformation {\n}\nexport { VideoTransformation };\n","/**\n *\n * @param publicID\n */\nexport function isUrl(publicID) {\n    return publicID.match(/^https?:\\//);\n}\n","/**\n *\n * @param publicID\n */\nexport function isFileName(publicID) {\n    return publicID.indexOf('/') < 0;\n}\n","/**\n *\n * @param publicID\n */\nexport function publicIDContainsVersion(publicID) {\n    return publicID.match(/^v[0-9]+/);\n}\n","import { isUrl } from \"./urlUtils/isUrl.js\";\nimport { isFileName } from \"./urlUtils/isFileName.js\";\nimport { publicIDContainsVersion } from \"./urlUtils/publicIDContainsVersion.js\";\n/**\n * Create the URL prefix for Cloudinary resources.\n * Available use cases\n * http://res.cloudinary.com/{cloudName}\n * https://res.cloudinary.com/{cloudName}\n * https://{cloudName}-res.cloudinary.com/\n * http://{domain}/${cloudName}\n * https://{domain}/${cloudName}\n * https://{domain}\n * @private\n *\n * @param {string} cloudName\n * @param {IURLConfig} urlConfig\n */\nfunction getUrlPrefix(cloudName, urlConfig) {\n    const secure = urlConfig.secure;\n    const privateCDN = urlConfig.privateCdn;\n    const cname = urlConfig.cname;\n    const secureDistribution = urlConfig.secureDistribution;\n    if (!secure && !cname) {\n        return `http://res.cloudinary.com/${cloudName}`;\n    }\n    if (secure && !secureDistribution && privateCDN) {\n        return `https://${cloudName}-res.cloudinary.com`;\n    }\n    if (secure && !secureDistribution) {\n        return `https://res.cloudinary.com/${cloudName}`;\n    }\n    if (secure && secureDistribution && privateCDN) {\n        return `https://${secureDistribution}`;\n    }\n    if (secure && secureDistribution) {\n        return `https://${secureDistribution}/${cloudName}`;\n    }\n    if (!secure && cname) {\n        return `http://${cname}/${cloudName}`;\n    }\n    else {\n        return 'ERROR';\n    }\n}\n/**\n * @private\n * @param assetType\n */\nfunction handleAssetType(assetType) {\n    //default to image\n    if (!assetType) {\n        return 'image';\n    }\n    return assetType;\n}\n/**\n * @private\n * @param deliveryType\n */\nfunction handleDeliveryType(deliveryType) {\n    //default to upload\n    if (!deliveryType) {\n        return 'upload';\n    }\n    return deliveryType;\n}\n/**\n *\n * @param {string} publicID\n * @param {number} version\n * @param {boolean} forceVersion\n */\nfunction getUrlVersion(publicID, version, forceVersion) {\n    const shouldForceVersion = forceVersion !== false;\n    if (version) {\n        return `v${version}`;\n    }\n    // In all these conditions we never force a version\n    if (publicIDContainsVersion(publicID) || isUrl(publicID) || isFileName(publicID)) {\n        return '';\n    }\n    return shouldForceVersion ? 'v1' : '';\n}\nexport { handleAssetType, getUrlVersion, handleDeliveryType, getUrlPrefix };\n","/**\n * @private\n * @description Adds left padding to a string with the desired substring the provided number of times\n * @example stringPad(foo, 3, 'a'') // -> aaafoo\n * @param {string} value\n * @param {number} _targetLength\n * @param {string} _padString\n */\nexport function stringPad(value, _targetLength, _padString) {\n    let targetLength = _targetLength >> 0; //truncate if number or convert non-number to 0;\n    let padString = String((typeof _padString !== 'undefined' ? _padString : ' '));\n    if (value.length > targetLength) {\n        return String(value);\n    }\n    else {\n        targetLength = targetLength - value.length;\n        if (targetLength > padString.length) {\n            padString += repeatStringNumTimes(padString, targetLength / padString.length);\n        }\n        return padString.slice(0, targetLength) + String(value);\n    }\n}\n/**\n * @description Repeat a string multiple times, cross-browser-safe alternative to string.repeat()\n * @param string\n * @param _times\n */\nfunction repeatStringNumTimes(string, _times) {\n    let times = _times;\n    let repeatedString = \"\";\n    while (times > 0) {\n        repeatedString += string;\n        times--;\n    }\n    return repeatedString;\n}\n","import { stringPad } from \"./stringPad.js\";\n/**\n * This file maps sequences of 6 bit binary digits to a character in base64.\n * 000000 -> A\n * 110011 -> Z\n * 111111 -> /\n */\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst base64Map = {};\nlet num = 0;\nchars.split('').forEach((char) => {\n    let key = num.toString(2);\n    key = stringPad(key, 6, '0');\n    base64Map[key] = char;\n    num++;\n});\n/**\n * Map of [six-bit binary codes] -> [Base64 characters]\n */\nexport { base64Map };\n","import { stringPad } from \"./stringPad.js\";\n/**\n * @private\n * @description Reverses the version positions, x.y.z turns to z.y.x\n *              Pads each segment with '0' so they have length of 2\n *              Example: 1.2.3 -> 03.02.01\n * @param {string} semVer Input can be either x.y.z or x.y\n * @return {string} in the form of zz.yy.xx (\n */\nexport function reverseVersion(semVer) {\n    if (semVer.split('.').length < 2) {\n        throw new Error('invalid semVer, must have at least two segments');\n    }\n    // Split by '.', reverse, create new array with padded values and concat it together\n    return semVer.split('.').reverse().map((segment) => {\n        // try to cast to number\n        const asNumber = +segment;\n        if (isNaN(asNumber) || asNumber < 0) {\n            throw 'Invalid version number provided';\n        }\n        return stringPad(segment, 2, '0');\n    }).join('.');\n}\n","import { base64Map } from \"./base64Map.js\";\nimport { stringPad } from \"./stringPad.js\";\nimport { reverseVersion } from \"./reverseVersion.js\";\n/**\n * @private\n * @description Encodes a semVer-like version string\n * @param {string} semVer Input can be either x.y.z or x.y\n * @return {string} A string built from 3 characters of the base64 table that encode the semVer\n */\nexport function encodeVersion(semVer) {\n    let strResult = '';\n    // support x.y or x.y.z by using 'parts' as a variable\n    const parts = semVer.split('.').length;\n    const paddedStringLength = parts * 6; // we pad to either 12 or 18 characters\n    // reverse (but don't mirror) the version. 1.5.15 -> 15.5.1\n    // Pad to two spaces, 15.5.1 -> 15.05.01\n    const paddedReversedSemver = reverseVersion(semVer);\n    // turn 15.05.01 to a string '150501' then to a number 150501\n    const num = parseInt(paddedReversedSemver.split('.').join(''));\n    // Represent as binary, add left padding to 12 or 18 characters.\n    // 150,501 -> 100100101111100101\n    let paddedBinary = num.toString(2);\n    paddedBinary = stringPad(paddedBinary, paddedStringLength, '0');\n    // Stop in case an invalid version number was provided\n    // paddedBinary must be built from sections of 6 bits\n    if (paddedBinary.length % 6 !== 0) {\n        throw 'Version must be smaller than 43.21.26)';\n    }\n    // turn every 6 bits into a character using the base64Map\n    paddedBinary.match(/.{1,6}/g).forEach((bitString) => {\n        // console.log(bitString);\n        strResult += base64Map[bitString];\n    });\n    return strResult;\n}\n","/**\n * @private\n * @description Gets the analyticsOptions from options- should include sdkSemver, techVersion, sdkCode, and feature\n * @param {ITrackedPropertiesThroughAnalytics} options\n * @returns {IAnalyticsOptions}\n */\nexport function getAnalyticsOptions(options) {\n    const analyticsOptions = {\n        sdkSemver: options.sdkSemver,\n        techVersion: options.techVersion,\n        sdkCode: options.sdkCode,\n        feature: '0'\n    };\n    if (options.accessibility) {\n        analyticsOptions.feature = 'D';\n    }\n    if (options.lazyload) {\n        analyticsOptions.feature = 'C';\n    }\n    if (options.responsive) {\n        analyticsOptions.feature = 'A';\n    }\n    if (options.placeholder) {\n        analyticsOptions.feature = 'B';\n    }\n    return analyticsOptions;\n}\n","const packageVersion = '1.9.0';\n/**\n * Export package version (injected during our build).\n * Reason for this is that If we import values from from package.json,\n * it will cause an error for users who do not have an 'import from json' plugin\n * as part of their build process / bundler.\n */\nexport { packageVersion };\n","import { encodeVersion } from \"./encodeVersion.js\";\nimport { getAnalyticsOptions } from \"./getAnalyticsOptions.js\";\nimport { packageVersion } from \"../internal/utils/packageVersion.js\";\n/**\n * @private\n * @description Try to get the node version out of process, if browser just return 0.0.0\n */\nfunction getNodeVersion() {\n    const failedVersion = '0.0.0';\n    if (typeof window !== 'undefined') {\n        return failedVersion;\n    }\n    else {\n        // node env\n        try {\n            return process.versions.node || failedVersion;\n        }\n        catch (e) {\n            return failedVersion;\n        }\n    }\n}\n/**\n * @private\n * @description Ensure that all values ITrackedPropertiesThroughAnalytics are populated.\n * Accept a partial map of values and returns the complete interface of ITrackedPropertiesThroughAnalytics\n * @param {ITrackedPropertiesThroughAnalytics} trackedAnalytics\n * @param {ITrackedPropertiesThroughAnalytics} trackedAnalytics\n */\nfunction ensureShapeOfTrackedProperties(trackedAnalytics) {\n    // try to get the process version from node, but if we're on the client return 0.0.0\n    const defaults = {\n        techVersion: getNodeVersion(),\n        sdkCode: 'T',\n        sdkSemver: packageVersion.split('-')[0],\n        responsive: false,\n        placeholder: false,\n        lazyload: false,\n        accessibility: false\n    };\n    if (!trackedAnalytics) {\n        return defaults;\n    }\n    else {\n        return Object.assign(Object.assign({}, defaults), trackedAnalytics);\n    }\n}\n/**\n * @private\n * @description Creates the complete SDK signature by using all the values provided by ITrackedPropertiesThroughAnalytics\n *              Creation of the signature\n *              - Set the AlgoVersion of the encoding, this is an internal letter that represents the version\n *                of our encoding algorithm, it will allow us to perform breaking changes if we'll need them.\n *              - Take the constant SDK code (Arbitrary letter chosen for each SDK, for Base that letter is 'T')\n *                this is used to tell apart which SDK is being tracked.\n *              - Take the {major.minor} versions of the node version (techVersion) (14.2, 16.2 etc.)\n *              - Take the full semver of the SDK you wish to track\n *              - Take the features used(lazy, placeholder etc.) and turn them to a letter (for example accessibility -> D)\n *              - Before appending the string, the Versions must be encoded, see the function `encodeVersion` for more details\n *              - Append all the variables to a single string\n *              - In any case of an error, return the single letter 'E'\n *\n * @return {string} sdkAnalyticsSignature\n */\nexport function getSDKAnalyticsSignature(_trackedAnalytics) {\n    const trackedAnalytics = ensureShapeOfTrackedProperties(_trackedAnalytics);\n    const analyticsOptions = getAnalyticsOptions(trackedAnalytics);\n    try {\n        const twoPartVersion = removePatchFromSemver(analyticsOptions.techVersion);\n        const encodedSDKVersion = encodeVersion(analyticsOptions.sdkSemver);\n        const encodedTechVersion = encodeVersion(twoPartVersion);\n        const featureCode = analyticsOptions.feature;\n        const SDKCode = analyticsOptions.sdkCode;\n        const algoVersion = 'A'; // The algo version is determined here, it should not be an argument\n        return `${algoVersion}${SDKCode}${encodedSDKVersion}${encodedTechVersion}${featureCode}`;\n    }\n    catch (e) {\n        // Either SDK or Node versions were unparsable\n        return 'E';\n    }\n}\n/**\n * @private\n * @description Removes patch version from the semver if it exists\n *              Turns x.y.z OR x.y into x.y\n * @param {'x.y.z' | 'x.y' | string} semVerStr\n */\nfunction removePatchFromSemver(semVerStr) {\n    const parts = semVerStr.split('.');\n    return `${parts[0]}.${parts[1]}`;\n}\n","import { getUrlPrefix, getUrlVersion, handleAssetType, handleDeliveryType } from \"../internal/url/cloudinaryURL.js\";\nimport URLConfig from \"../config/URLConfig.js\";\nimport { getSDKAnalyticsSignature } from \"../sdkAnalytics/getSDKAnalyticsSignature.js\";\n/**\n * This const contains all the valid combination of asset/delivery for URL shortening purposes\n * It's exported because it's used in a test, but it's not really shared enough to belong in a separate file\n */\nexport const SEO_TYPES = {\n    \"image/upload\": \"images\",\n    \"image/private\": \"private_images\",\n    \"image/authenticated\": \"authenticated_images\",\n    \"raw/upload\": \"files\",\n    \"video/upload\": \"videos\"\n};\n/**\n * @description Cloudinary file without a transformation\n * @summary SDK\n * @memberOf SDK\n */\nclass CloudinaryFile {\n    constructor(publicID, cloudConfig = {}, urlConfig) {\n        this.setPublicID(publicID);\n        this.setCloudConfig(cloudConfig);\n        this.setURLConfig(urlConfig);\n    }\n    /**\n     * @description Sets the URL Config for this asset\n     * @param urlConfig\n     * @return {this}\n     */\n    setURLConfig(urlConfig) {\n        this.urlConfig = new URLConfig(urlConfig);\n        return this;\n    }\n    /**\n     * @description Sets the Cloud Config for this asset\n     * @param urlConfig\n     * @return {this}\n     */\n    setCloudConfig(cloudConfig) {\n        this.cloudName = cloudConfig.cloudName;\n        this.apiKey = cloudConfig.apiKey;\n        this.apiSecret = cloudConfig.apiSecret;\n        this.authToken = cloudConfig.authToken;\n        return this;\n    }\n    /**\n     * @description Sets the public ID of the asset.\n     * @param {string} publicID The public ID of the asset.\n     * @return {this}\n     */\n    setPublicID(publicID) {\n        // PublicID must be a string!\n        this.publicID = publicID ? publicID.toString() : '';\n        return this;\n    }\n    /**\n     * @description Sets the delivery type of the asset.\n     * @param {DELIVERY_TYPE | string} newType The type of the asset.\n     * @return {this}\n     */\n    setDeliveryType(newType) {\n        this.deliveryType = newType;\n        return this;\n    }\n    /**\n     * @description Sets the URL SEO suffix of the asset.\n     * @param {string} newSuffix The SEO suffix.\n     * @return {this}\n     */\n    setSuffix(newSuffix) {\n        this.suffix = newSuffix;\n        return this;\n    }\n    /**\n     * @description Sets the signature of the asset.\n     * @param {string} signature The signature.\n     * @return {this}\n     */\n    setSignature(signature) {\n        this.signature = signature;\n        return this;\n    }\n    /**\n     * @description Sets the version of the asset.\n     * @param {string} newVersion The version of the asset.\n     * @return {this}\n     */\n    setVersion(newVersion) {\n        if (newVersion) {\n            this.version = newVersion;\n        }\n        return this;\n    }\n    /**\n     * @description Sets the asset type.\n     * @param {string} newType The type of the asset.\n     * @return {this}\n     */\n    setAssetType(newType) {\n        if (newType) {\n            this.assetType = newType;\n        }\n        return this;\n    }\n    sign() {\n        return this;\n    }\n    /**\n     * @description Serializes to URL string\n     * @param overwriteOptions\n     */\n    toURL(overwriteOptions = {}) {\n        return this.createCloudinaryURL(null, overwriteOptions.trackedAnalytics);\n    }\n    /**\n     * @description Validate various options before attempting to create a URL\n     * The function will throw in case a violation\n     * @throws Validation errors\n     */\n    validateAssetForURLCreation() {\n        if (typeof this.cloudName === 'undefined') {\n            throw 'You must supply a cloudName when initializing the asset';\n        }\n        const suffixContainsDot = this.suffix && this.suffix.indexOf('.') >= 0;\n        const suffixContainsSlash = this.suffix && this.suffix.indexOf('/') >= 0;\n        if (suffixContainsDot || suffixContainsSlash) {\n            throw '`suffix`` should not include . or /';\n        }\n    }\n    /**\n     * @description return an SEO friendly name for a combination of asset/delivery, some examples:\n     * * image/upload -> images\n     * * video/upload -> videos\n     * If no match is found, return `{asset}/{delivery}`\n     */\n    getResourceType() {\n        const assetType = handleAssetType(this.assetType);\n        const deliveryType = handleDeliveryType(this.deliveryType);\n        const hasSuffix = !!this.suffix;\n        const regularSEOType = `${assetType}/${deliveryType}`;\n        const shortSEOType = SEO_TYPES[`${assetType}/${deliveryType}`];\n        const useRootPath = this.urlConfig.useRootPath;\n        const shorten = this.urlConfig.shorten;\n        // Quick exit incase of useRootPath\n        if (useRootPath) {\n            if (regularSEOType === 'image/upload') {\n                return ''; // For image/upload we're done, just return nothing\n            }\n            else {\n                throw new Error(`useRootPath can only be used with assetType: 'image' and deliveryType: 'upload'. Provided: ${regularSEOType} instead`);\n            }\n        }\n        if (shorten && regularSEOType === 'image/upload') {\n            return 'iu';\n        }\n        if (hasSuffix) {\n            if (shortSEOType) {\n                return shortSEOType;\n            }\n            else {\n                throw new Error(`URL Suffix only supported for ${Object.keys(SEO_TYPES).join(', ')}, Provided: ${regularSEOType} instead`);\n            }\n        }\n        // If all else fails, return the regular image/upload combination (asset/delivery)\n        return regularSEOType;\n    }\n    getSignature() {\n        if (this.signature) {\n            return `s--${this.signature}--`;\n        }\n        else {\n            return '';\n        }\n    }\n    /**\n     *\n     * @description Creates a fully qualified CloudinaryURL\n     * @return {string} CloudinaryURL\n     * @throws Validation Errors\n     */\n    createCloudinaryURL(transformation, trackedAnalytics) {\n        // In accordance with the existing implementation, if no publicID exists we should return nothing.\n        if (!this.publicID) {\n            return '';\n        }\n        // Throws if some options are mis-configured\n        // See the function for more information on when it throws\n        this.validateAssetForURLCreation();\n        const prefix = getUrlPrefix(this.cloudName, this.urlConfig);\n        const transformationString = transformation ? transformation.toString() : '';\n        const version = getUrlVersion(this.publicID, this.version, this.urlConfig.forceVersion);\n        const publicID = this.publicID\n            // Serialize the publicID, but leave slashes alone.\n            // we can't use serializeCloudinaryCharacters because that does both things (, and /)\n            .replace(/,/g, '%2C');\n        // Resource type is a mixture of assetType, deliveryType and various URL Configurations\n        // Note how `suffix` changes both image/upload (resourceType) and also is appended at the end\n        const url = [prefix, this.getResourceType(), this.getSignature(), transformationString, version, publicID, this.suffix]\n            .filter((a) => a)\n            .join('/');\n        if (typeof transformation === 'string') {\n            return url;\n        }\n        else {\n            const safeURL = encodeURI(url)\n                .replace(/\\?/g, '%3F')\n                .replace(/=/g, '%3D');\n            // urlConfig.analytics is true by default, has to be explicitly set to false to overwrite\n            // Don't add analytics when publicId includes a '?' to not risk changing existing query params\n            if (this.urlConfig.analytics !== false && !(publicID.includes('?'))) {\n                return `${safeURL}?_a=${getSDKAnalyticsSignature(trackedAnalytics)}`;\n            }\n            else {\n                return safeURL;\n            }\n        }\n    }\n}\nexport { CloudinaryFile };\n","import { CloudinaryFile } from \"./CloudinaryFile.js\";\nimport { DeliveryFormatAction } from \"@cloudinary/transformation-builder-sdk/actions/delivery/DeliveryFormatAction\";\n/**\n * @desc Cloudinary Transformable interface, extended by any class that needs a Transformation Interface\n * @summary SDK\n * @memberOf SDK\n */\nclass CloudinaryTransformable extends CloudinaryFile {\n    constructor(publicID, cloudConfig, urlConfig, transformation) {\n        /* istanbul ignore next */\n        super(publicID, cloudConfig, urlConfig);\n        this.transformation = transformation;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.Animated} animated\n     * @return {this}\n     */\n    animated(animated) {\n        this.transformation.animated(animated);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.Border} border\n     * @return {this}\n     */\n    border(border) {\n        this.transformation.border(border);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.Reshape} reshape\n     * @return {this}\n     */\n    reshape(reshape) {\n        this.transformation.reshape(reshape);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.Resize} resize\n     * @return {this}\n     */\n    resize(resize) {\n        this.transformation.resize(resize);\n        return this;\n    }\n    /**\n     * @desc An alias to Action Delivery.quality\n     * @param {string|number} quality\n     * @return {this}\n     */\n    quality(quality) {\n        this.addAction(new DeliveryFormatAction('q', quality));\n        return this;\n    }\n    /**\n     * @desc An alias to Action Delivery.format\n     * @param {string} format\n     * @return {this}\n     */\n    format(format) {\n        this.addAction(new DeliveryFormatAction('f', format));\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.RoundCorners} roundCorners\n     * @return {this}\n     */\n    roundCorners(roundCorners) {\n        this.transformation.roundCorners(roundCorners);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @return {this}\n     */\n    overlay(overlayAction) {\n        this.transformation.overlay(overlayAction);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.Variable} variableAction\n     * @return {this}\n     */\n    addVariable(variableAction) {\n        this.transformation.addVariable(variableAction);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.Condition} conditionalAction\n     * @return {this}\n     */\n    conditional(conditionalAction) {\n        this.transformation.conditional(conditionalAction);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.Effect} effect\n     * @return {this}\n     */\n    effect(effect) {\n        this.transformation.effect(effect);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.Adjust} action\n     * @return {this}\n     */\n    adjust(action) {\n        this.transformation.adjust(action);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.Rotate} rotate\n     * @return {this}\n     */\n    rotate(rotate) {\n        this.transformation.rotate(rotate);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.NamedTransformation} namedTransformation\n     * @return {this}\n     */\n    namedTransformation(namedTransformation) {\n        this.transformation.namedTransformation(namedTransformation);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.Delivery} deliveryAction\n     * @return {this}\n     */\n    delivery(deliveryAction) {\n        this.transformation.delivery(deliveryAction);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Qualifiers.color} color\n     * @return {this}\n     */\n    backgroundColor(color) {\n        this.transformation.backgroundColor(color);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.PSDTools} action\n     * @return {this}\n     */\n    psdTools(action) {\n        this.transformation.psdTools(action);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.Extract} action\n     * @return {this}\n     */\n    extract(action) {\n        this.transformation.extract(action);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Qualifiers.Flag | string} flagQualifier\n     * @return {this}\n     */\n    addFlag(flagQualifier) {\n        this.transformation.addFlag(flagQualifier);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.CustomFunction} customFunction\n     * @return {this}\n     */\n    customFunction(customFunction) {\n        this.transformation.customFunction(customFunction);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {SDK.Action | string} action\n     * @return {this}\n     */\n    addAction(action) {\n        this.transformation.addAction(action);\n        return this;\n    }\n    /**\n     * @description Extend your transformation with another transformation\n     * @param { string | SDK.Transformation } tx\n     */\n    addTransformation(tx) {\n        this.transformation.addTransformation(tx);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @return {string}\n     */\n    toString() {\n        return this.transformation.toString();\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @return {this}\n     */\n    underlay(underlayAction) {\n        this.transformation.underlay(underlayAction);\n        return this;\n    }\n    toURL(overwriteOptions = {}) {\n        return this.createCloudinaryURL(this.transformation, overwriteOptions === null || overwriteOptions === void 0 ? void 0 : overwriteOptions.trackedAnalytics);\n    }\n}\nexport { CloudinaryTransformable };\n","import { ImageTransformation } from \"@cloudinary/transformation-builder-sdk/transformation/ImageTransformation\";\nimport { CloudinaryTransformable } from \"./CloudinaryTransformable.js\";\n/**\n * @desc Cloudinary image asset, with image-related transformations\n * @summary SDK\n * @memberOf SDK\n */\nclass CloudinaryImage extends CloudinaryTransformable {\n    constructor(publicID, cloudConfig, urlConfig) {\n        /* istanbul ignore next */\n        super(publicID, cloudConfig, urlConfig, new ImageTransformation());\n    }\n}\nexport { CloudinaryImage };\n","import { CloudinaryTransformable } from \"./CloudinaryTransformable.js\";\nimport { VideoTransformation } from \"../transformation/VideoTransformation.js\";\n/**\n * @desc Cloudinary video asset, with video-related transformations\n * @summary SDK\n * @memberOf SDK\n */\nclass CloudinaryVideo extends CloudinaryTransformable {\n    constructor(publicID, cloudConfig, urlConfig) {\n        /* istanbul ignore next */\n        super(publicID, cloudConfig, urlConfig, new VideoTransformation());\n        this.assetType = 'video';\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.Transcode} action\n     * @return {this}\n     */\n    transcode(action) {\n        this.transformation.transcode(action);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.VideoEdit} action\n     * @return {this}\n     */\n    videoEdit(action) {\n        this.transformation.videoEdit(action);\n        return this;\n    }\n}\nexport { CloudinaryVideo };\n","import { CloudinaryImage } from \"../assets/CloudinaryImage.js\";\nimport { CloudinaryVideo } from \"../assets/CloudinaryVideo.js\";\nclass Cloudinary {\n    constructor(cloudinaryConfig) {\n        if (cloudinaryConfig) {\n            this.cloudinaryConfig = cloudinaryConfig;\n        }\n    }\n    image(publicID) {\n        return new CloudinaryImage(publicID, this.cloudinaryConfig.cloud, this.cloudinaryConfig.url);\n    }\n    video(publicID) {\n        return new CloudinaryVideo(publicID, this.cloudinaryConfig.cloud, this.cloudinaryConfig.url);\n    }\n    setConfig(cloudinaryConfig) {\n        this.cloudinaryConfig = cloudinaryConfig;\n        return this;\n    }\n    getConfig() {\n        return this.cloudinaryConfig;\n    }\n    extendConfig() {\n        // Future implementation\n    }\n}\nexport { Cloudinary };\n","var __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// src/lib/cloudinary.ts\nimport { Cloudinary } from \"@cloudinary/url-gen\";\nimport { parseUrl, objectHasKey as objectHasKey3 } from \"@cloudinary-util/util\";\n\n// src/plugins/cropping.ts\nvar cropping_exports = {};\n__export(cropping_exports, {\n  plugin: () => plugin,\n  props: () => props\n});\nvar cropsGravityAuto = [\"crop\", \"fill\", \"lfill\", \"fill_pad\", \"thumb\"];\nvar cropsWithZoom = [\"crop\", \"thumb\"];\nvar props = [\n  \"crop\",\n  \"gravity\",\n  \"zoom\"\n];\nfunction plugin(props12) {\n  const { cldImage, options } = props12;\n  const { width, height, widthResize, crop = \"limit\" } = options;\n  const overrides = {\n    width: void 0\n  };\n  let transformationString = \"\";\n  if (width) {\n    transformationString = `c_${crop},w_${width}`;\n  }\n  if (!options.gravity && cropsGravityAuto.includes(crop)) {\n    options.gravity = \"auto\";\n  }\n  if (![\"limit\"].includes(crop)) {\n    transformationString = `${transformationString},h_${height}`;\n  }\n  if (options.gravity) {\n    if (options.gravity === \"auto\" && !cropsGravityAuto.includes(crop)) {\n      console.warn(`Auto gravity can only be used with crop modes: ${cropsGravityAuto.join(\", \")}. Not applying gravity.`);\n    } else {\n      transformationString = `${transformationString},g_${options.gravity}`;\n    }\n  }\n  if (options.zoom) {\n    if (options.zoom === \"auto\" && !cropsWithZoom.includes(crop)) {\n      console.warn(`Zoom can only be used with crop modes: ${cropsWithZoom.join(\", \")}. Not applying zoom.`);\n    } else {\n      transformationString = `${transformationString},z_${options.zoom}`;\n    }\n  }\n  cldImage.effect(transformationString);\n  if (width && typeof widthResize === \"number\" && widthResize < width) {\n    overrides.width = widthResize;\n  }\n  return {\n    options: overrides\n  };\n}\n\n// src/plugins/effects.ts\nvar effects_exports = {};\n__export(effects_exports, {\n  plugin: () => plugin2,\n  props: () => props2\n});\n\n// src/constants/qualifiers.ts\nvar primary = {\n  aspectRatio: {\n    qualifier: \"ar\"\n  },\n  crop: {\n    qualifier: \"c\"\n  },\n  gravity: {\n    qualifier: \"g\"\n  },\n  height: {\n    qualifier: \"h\"\n  },\n  width: {\n    qualifier: \"w\"\n  }\n};\nvar position = {\n  angle: {\n    qualifier: \"a\"\n  },\n  gravity: {\n    qualifier: \"g\"\n  },\n  x: {\n    qualifier: \"x\"\n  },\n  y: {\n    qualifier: \"y\"\n  }\n};\nvar text = {\n  alignment: {\n    qualifier: false,\n    order: 6\n  },\n  antialias: {\n    qualifier: \"antialias\"\n  },\n  border: {\n    qualifier: \"bo\",\n    location: \"primary\"\n  },\n  color: {\n    qualifier: \"co\",\n    location: \"primary\"\n  },\n  fontFamily: {\n    qualifier: false,\n    order: 1\n  },\n  fontSize: {\n    qualifier: false,\n    order: 2\n  },\n  fontStyle: {\n    qualifier: false,\n    order: 4\n  },\n  fontWeight: {\n    qualifier: false,\n    order: 3\n  },\n  hinting: {\n    qualifier: \"hinting\"\n  },\n  letterSpacing: {\n    qualifier: \"letter_spacing\"\n  },\n  lineSpacing: {\n    qualifier: \"line_spacing\"\n  },\n  stroke: {\n    qualifier: \"self\",\n    order: 7\n  },\n  textDecoration: {\n    qualifier: false,\n    order: 5\n  }\n};\nvar effects = {\n  art: {\n    prefix: \"e\",\n    qualifier: \"art\"\n  },\n  autoBrightness: {\n    prefix: \"e\",\n    qualifier: \"auto_brightness\"\n  },\n  autoColor: {\n    prefix: \"e\",\n    qualifier: \"auto_color\"\n  },\n  autoContrast: {\n    prefix: \"e\",\n    qualifier: \"auto_contrast\"\n  },\n  assistColorblind: {\n    prefix: \"e\",\n    qualifier: \"assist_colorblind\"\n  },\n  background: {\n    qualifier: \"b\"\n  },\n  blackwhite: {\n    prefix: \"e\",\n    qualifier: \"blackwhite\"\n  },\n  blur: {\n    prefix: \"e\",\n    qualifier: \"blur\"\n  },\n  blurFaces: {\n    prefix: \"e\",\n    qualifier: \"blur_faces\"\n  },\n  blurRegion: {\n    prefix: \"e\",\n    qualifier: \"blur_region\"\n  },\n  border: {\n    qualifier: \"bo\"\n  },\n  brightness: {\n    prefix: \"e\",\n    qualifier: \"brightness\"\n  },\n  brightnessHSB: {\n    prefix: \"e\",\n    qualifier: \"brightness_hsb\"\n  },\n  cartoonify: {\n    prefix: \"e\",\n    qualifier: \"cartoonify\"\n  },\n  color: {\n    qualifier: \"co\"\n  },\n  colorize: {\n    prefix: \"e\",\n    qualifier: \"colorize\"\n  },\n  contrast: {\n    prefix: \"e\",\n    qualifier: \"contrast\"\n  },\n  distort: {\n    prefix: \"e\",\n    qualifier: \"distort\"\n  },\n  fillLight: {\n    prefix: \"e\",\n    qualifier: \"fill_light\"\n  },\n  gamma: {\n    prefix: \"e\",\n    qualifier: \"gamma\"\n  },\n  gradientFade: {\n    prefix: \"e\",\n    qualifier: \"gradient_fade\"\n  },\n  grayscale: {\n    prefix: \"e\",\n    qualifier: \"grayscale\"\n  },\n  improve: {\n    prefix: \"e\",\n    qualifier: \"improve\"\n  },\n  multiply: {\n    prefix: \"e\",\n    qualifier: \"multiply\"\n  },\n  negate: {\n    prefix: \"e\",\n    qualifier: \"negate\"\n  },\n  oilPaint: {\n    prefix: \"e\",\n    qualifier: \"oil_paint\"\n  },\n  opacity: {\n    qualifier: \"o\"\n  },\n  outline: {\n    prefix: \"e\",\n    qualifier: \"outline\"\n  },\n  overlay: {\n    prefix: \"e\",\n    qualifier: \"overlay\"\n  },\n  pixelate: {\n    prefix: \"e\",\n    qualifier: \"pixelate\"\n  },\n  pixelateFaces: {\n    prefix: \"e\",\n    qualifier: \"pixelate_faces\"\n  },\n  pixelateRegion: {\n    prefix: \"e\",\n    qualifier: \"pixelate_region\"\n  },\n  redeye: {\n    prefix: \"e\",\n    qualifier: \"redeye\"\n  },\n  replaceColor: {\n    prefix: \"e\",\n    qualifier: \"replace_color\"\n  },\n  saturation: {\n    prefix: \"e\",\n    qualifier: \"saturation\"\n  },\n  screen: {\n    prefix: \"e\",\n    qualifier: \"screen\"\n  },\n  sepia: {\n    prefix: \"e\",\n    qualifier: \"sepia\"\n  },\n  shadow: {\n    prefix: \"e\",\n    qualifier: \"shadow\"\n  },\n  sharpen: {\n    prefix: \"e\",\n    qualifier: \"sharpen\"\n  },\n  shear: {\n    prefix: \"e\",\n    qualifier: \"shear\"\n  },\n  simulateColorblind: {\n    prefix: \"e\",\n    qualifier: \"simulate_colorblind\"\n  },\n  tint: {\n    prefix: \"e\",\n    qualifier: \"tint\"\n  },\n  unsharpMask: {\n    prefix: \"e\",\n    qualifier: \"unsharp_mask\"\n  },\n  vectorize: {\n    prefix: \"e\",\n    qualifier: \"vectorize\"\n  },\n  vibrance: {\n    prefix: \"e\",\n    qualifier: \"vibrance\"\n  },\n  vignette: {\n    prefix: \"e\",\n    qualifier: \"vignette\"\n  }\n};\nvar flags = {\n  relative: {\n    prefix: \"fl\",\n    qualifier: \"relative\",\n    location: \"primary\"\n  }\n};\n\n// src/lib/transformations.ts\nfunction constructTransformation({ prefix, qualifier, value }) {\n  let transformation = \"\";\n  if (prefix) {\n    transformation = `${prefix}_`;\n  }\n  if (value === true || value === \"true\") {\n    return `${transformation}${qualifier}`;\n  }\n  if (typeof value === \"string\" || typeof value === \"number\") {\n    if (prefix) {\n      return `${transformation}${qualifier}:${value}`;\n    } else {\n      return `${qualifier}_${value}`;\n    }\n  }\n}\n\n// src/plugins/effects.ts\nvar props2 = [...Object.keys(effects), \"effects\"];\nfunction plugin2(props12) {\n  const { cldImage, options } = props12;\n  const transformationStrings = constructTransformationString({\n    effects,\n    options\n  });\n  transformationStrings.filter((t) => !!t).forEach((transformation) => cldImage.effect(transformation));\n  ;\n  if (Array.isArray(options == null ? void 0 : options.effects)) {\n    options == null ? void 0 : options.effects.forEach((effectsSet) => {\n      const transformationString = constructTransformationString({\n        effects,\n        options: effectsSet\n      }).filter((t) => !!t).join(\",\");\n      cldImage.effect(transformationString);\n    });\n  }\n  function constructTransformationString({ effects: effects2, options: options2 }) {\n    return Object.keys(effects2).map((key) => {\n      const { prefix, qualifier } = effects2[key];\n      return constructTransformation({\n        qualifier,\n        prefix,\n        value: options2 == null ? void 0 : options2[key]\n      });\n    });\n  }\n  return {};\n}\n\n// src/plugins/sanitize.ts\nvar sanitize_exports = {};\n__export(sanitize_exports, {\n  plugin: () => plugin3,\n  props: () => props3\n});\nvar props3 = [\"sanitize\"];\nfunction plugin3(props12) {\n  const { cldImage, options } = props12;\n  const { sanitize = true } = options;\n  const shouldApplySanitizer = sanitize && (options.format === \"svg\" || cldImage.publicID.endsWith(\".svg\"));\n  if (shouldApplySanitizer) {\n    cldImage.effect(\"fl_sanitize\");\n  }\n  return {};\n}\n\n// src/plugins/overlays.ts\nvar overlays_exports = {};\n__export(overlays_exports, {\n  DEFAULT_TEXT_OPTIONS: () => DEFAULT_TEXT_OPTIONS,\n  plugin: () => plugin4,\n  props: () => props4\n});\nimport { encodeBase64, objectHasKey, sortByKey } from \"@cloudinary-util/util\";\nvar props4 = [\"text\", \"overlays\"];\nvar DEFAULT_TEXT_OPTIONS = {\n  color: \"black\",\n  fontFamily: \"Arial\",\n  fontSize: 200,\n  fontWeight: \"bold\"\n};\nfunction plugin4(props12) {\n  const { cldImage, options } = props12;\n  const { text: text2, overlays = [] } = options;\n  const type = \"overlay\";\n  const typeQualifier = \"l\";\n  if (Array.isArray(overlays)) {\n    overlays.forEach(applyOverlay);\n  }\n  if (typeof text2 === \"string\") {\n    applyOverlay({\n      text: {\n        ...DEFAULT_TEXT_OPTIONS,\n        text: text2\n      }\n    });\n  } else if (typeof text2 === \"object\") {\n    applyOverlay({\n      text: {\n        ...DEFAULT_TEXT_OPTIONS,\n        ...text2\n      }\n    });\n  }\n  function applyOverlay({ publicId, url, position: position2, text: text3, effects: layerEffects = [], appliedEffects = [], ...options2 }) {\n    const hasPublicId = typeof publicId === \"string\";\n    const hasUrl = typeof url === \"string\";\n    const hasText = typeof text3 === \"object\" || typeof text3 === \"string\";\n    const hasPosition = typeof position2 === \"object\";\n    if (!hasPublicId && !hasUrl && !hasText) {\n      console.warn(`An ${type} is missing Public ID, URL, or Text`);\n      return;\n    }\n    let layerTransformation;\n    if (hasText) {\n      layerTransformation = `${typeQualifier}_text`;\n    } else if (hasPublicId) {\n      layerTransformation = `${typeQualifier}_${publicId.replace(/\\//g, \":\")}`;\n    } else if (hasUrl) {\n      layerTransformation = `${typeQualifier}_fetch:${encodeBase64(url)}`;\n    }\n    const primary2 = [];\n    const applied = [];\n    Object.keys(options2).forEach((key) => {\n      if (!objectHasKey(primary, key))\n        return;\n      const { qualifier } = primary[key];\n      const transformation = constructTransformation({\n        qualifier,\n        value: options2[key]\n      });\n      if (transformation) {\n        primary2.push(transformation);\n      }\n    });\n    layerEffects.forEach((effect) => {\n      Object.keys(effect).forEach((key) => {\n        const { qualifier, prefix } = primary[key] || effects[key] || {};\n        const transformation = constructTransformation({\n          qualifier,\n          prefix,\n          value: effect[key]\n        });\n        if (transformation) {\n          primary2.push(transformation);\n        }\n      });\n    });\n    appliedEffects.forEach((effect) => {\n      Object.keys(effect).forEach((key) => {\n        const { qualifier, prefix } = primary[key] || effects[key] || {};\n        const transformation = constructTransformation({\n          qualifier,\n          prefix,\n          value: effect[key]\n        });\n        if (transformation) {\n          applied.push(transformation);\n        }\n      });\n    });\n    if (hasText) {\n      if (typeof text3 === \"string\") {\n        text3 = {\n          ...DEFAULT_TEXT_OPTIONS,\n          text: text3\n        };\n      }\n      const textTransformations = [];\n      if (typeof text3 === \"object\") {\n        const textOptions = Object.keys(text3).filter((key) => objectHasKey(text, key)).map((key) => {\n          const value = text3 && objectHasKey(text3, key) && text3[key];\n          return {\n            ...text[key],\n            key,\n            value,\n            order: text[key].order || 99\n          };\n        });\n        const sortedTextOptions = sortByKey(textOptions, \"order\");\n        for (const textOption of sortedTextOptions) {\n          const { key, value, qualifier, location } = textOption;\n          if (location === \"primary\") {\n            primary2.push(`${qualifier}_${value}`);\n          } else if (qualifier === \"self\") {\n            textTransformations.push(key);\n          } else if (qualifier) {\n            textTransformations.push(`${qualifier}_${value}`);\n          } else {\n            textTransformations.push(value);\n          }\n        }\n      }\n      layerTransformation = `${layerTransformation}:${textTransformations.join(\"_\")}:${text3 == null ? void 0 : text3.text}`;\n    }\n    if (hasPosition) {\n      Object.keys(position2).forEach((key) => {\n        if (!objectHasKey(position, key))\n          return;\n        const { qualifier } = position[key];\n        const transformation = constructTransformation({\n          qualifier,\n          value: position2[key]\n        });\n        if (transformation) {\n          applied.push(transformation);\n        }\n      });\n    }\n    if (primary2.length > 0) {\n      layerTransformation = `${layerTransformation},${primary2.join(\",\")}`;\n    }\n    layerTransformation = `${layerTransformation}/fl_layer_apply,fl_no_overflow`;\n    if (applied.length > 0) {\n      layerTransformation = `${layerTransformation},${applied.join(\",\")}`;\n    }\n    cldImage.addTransformation(layerTransformation);\n  }\n  return {};\n}\n\n// src/plugins/named-transformations.ts\nvar named_transformations_exports = {};\n__export(named_transformations_exports, {\n  plugin: () => plugin5,\n  props: () => props5\n});\nvar props5 = [\"transformations\"];\nfunction plugin5(props12) {\n  const { cldImage, options } = props12;\n  let { transformations = [] } = options;\n  if (!Array.isArray(transformations)) {\n    transformations = [transformations];\n  }\n  transformations.forEach((transformation) => {\n    cldImage.addTransformation(`t_${transformation}`);\n  });\n  return {};\n}\n\n// src/plugins/raw-transformations.ts\nvar raw_transformations_exports = {};\n__export(raw_transformations_exports, {\n  plugin: () => plugin6,\n  props: () => props6\n});\nvar props6 = [\"rawTransformations\"];\nfunction plugin6(props12) {\n  const { cldImage, options } = props12;\n  const { rawTransformations = [] } = options;\n  rawTransformations.forEach((transformation) => {\n    cldImage.addTransformation(transformation);\n  });\n  return {};\n}\n\n// src/plugins/remove-background.ts\nvar remove_background_exports = {};\n__export(remove_background_exports, {\n  plugin: () => plugin7,\n  props: () => props7\n});\nvar props7 = [\"removeBackground\"];\nfunction plugin7(props12) {\n  const { cldImage, options } = props12;\n  const { removeBackground = false } = options;\n  if (removeBackground) {\n    cldImage.effect(\"e_background_removal\");\n  }\n  return {};\n}\n\n// src/plugins/seo.ts\nvar seo_exports = {};\n__export(seo_exports, {\n  plugin: () => plugin8,\n  props: () => props8\n});\nvar props8 = [\n  \"seoSuffix\"\n];\nfunction plugin8(props12) {\n  const { cldImage, options } = props12;\n  const { seoSuffix } = options;\n  if (typeof seoSuffix === \"string\") {\n    cldImage.setSuffix(seoSuffix);\n  }\n  return {};\n}\n\n// src/plugins/underlays.ts\nvar underlays_exports = {};\n__export(underlays_exports, {\n  plugin: () => plugin9,\n  props: () => props9\n});\nimport { objectHasKey as objectHasKey2 } from \"@cloudinary-util/util\";\nvar props9 = [\"underlay\", \"underlays\"];\nfunction plugin9(props12) {\n  const { cldImage, options } = props12;\n  const { underlay, underlays = [] } = options;\n  const typeQualifier = \"u\";\n  if (Array.isArray(underlays)) {\n    underlays.forEach(applyUnderlay);\n  }\n  if (typeof underlay === \"string\") {\n    const underlayOptions = {\n      publicId: underlay,\n      crop: \"fill\",\n      width: \"1.0\",\n      height: \"1.0\",\n      flags: [\"relative\"]\n    };\n    applyUnderlay(underlayOptions);\n  }\n  function applyUnderlay({ publicId, type, position: position2, effects: layerEffects = [], flags: flags2 = [], ...options2 }) {\n    const hasPublicId = typeof publicId === \"string\";\n    const hasPosition = typeof position2 === \"object\";\n    if (!hasPublicId) {\n      console.warn(`An ${type} is missing a Public ID`);\n      return;\n    }\n    let layerTransformation = `${typeQualifier}_${publicId.replace(/\\//g, \":\")}`;\n    const primary2 = [];\n    const applied = [];\n    Object.keys(options2).forEach((key) => {\n      if (!objectHasKey2(primary, key))\n        return;\n      const { qualifier } = primary[key];\n      primary2.push(`${qualifier}_${options2[key]}`);\n    });\n    layerEffects.forEach((effect) => {\n      Object.keys(effect).forEach((key) => {\n        if (!objectHasKey2(primary, key))\n          return;\n        const { qualifier } = primary[key];\n        primary2.push(`${qualifier}_${effect[key]}`);\n      });\n    });\n    if (hasPosition) {\n      Object.keys(position2).forEach((key) => {\n        if (!objectHasKey2(position, key))\n          return;\n        const { qualifier } = position[key];\n        applied.push(`${qualifier}_${position2[key]}`);\n      });\n    }\n    flags2.forEach((key) => {\n      if (!objectHasKey2(flags, key))\n        return;\n      const { qualifier, prefix } = flags[key];\n      primary2.push(`${prefix}_${qualifier}`);\n    });\n    layerTransformation = `${layerTransformation},${primary2.join(\",\")}`;\n    layerTransformation = `${layerTransformation}/fl_layer_apply,fl_no_overflow`;\n    if (applied.length > 0) {\n      layerTransformation = `${layerTransformation},${applied.join(\",\")}`;\n    }\n    cldImage.addTransformation(layerTransformation);\n  }\n  return {};\n}\n\n// src/plugins/version.ts\nvar version_exports = {};\n__export(version_exports, {\n  plugin: () => plugin10,\n  props: () => props10\n});\nvar props10 = [\"version\"];\nfunction plugin10(props12) {\n  const { cldImage, options } = props12;\n  const { version } = options;\n  if (typeof version === \"string\" || typeof version === \"number\") {\n    cldImage.setVersion(`${version}`.replace(\"v\", \"\"));\n  }\n  return {};\n}\n\n// src/plugins/zoompan.ts\nvar zoompan_exports = {};\n__export(zoompan_exports, {\n  plugin: () => plugin11,\n  props: () => props11\n});\nvar props11 = [\"zoompan\"];\nfunction plugin11(props12) {\n  const { cldImage, options } = props12;\n  const { zoompan = false } = options;\n  const overrides = {\n    format: void 0\n  };\n  if (zoompan === true) {\n    cldImage.effect(\"e_zoompan\");\n  } else if (typeof zoompan === \"string\") {\n    if (zoompan === \"loop\") {\n      cldImage.effect(\"e_zoompan\");\n      cldImage.effect(\"e_loop\");\n    } else {\n      cldImage.effect(`e_zoompan:${zoompan}`);\n    }\n  } else if (typeof zoompan === \"object\") {\n    let zoompanEffect = \"e_zoompan\";\n    if (typeof zoompan.options === \"string\") {\n      zoompanEffect = `${zoompanEffect}${zoompan.options}`;\n    }\n    cldImage.effect(zoompanEffect);\n    let loopEffect;\n    if (zoompan.loop === true) {\n      loopEffect = \"e_loop\";\n    } else if (typeof zoompan.loop === \"string\") {\n      loopEffect = `e_loop${zoompan.loop}`;\n    }\n    if (loopEffect) {\n      cldImage.effect(loopEffect);\n    }\n  }\n  if (zoompan !== false) {\n    overrides.format = \"gif\";\n  }\n  return {\n    options: overrides\n  };\n}\n\n// src/lib/cloudinary.ts\nvar transformationPlugins = [\n  remove_background_exports,\n  cropping_exports,\n  effects_exports,\n  overlays_exports,\n  sanitize_exports,\n  named_transformations_exports,\n  seo_exports,\n  underlays_exports,\n  version_exports,\n  zoompan_exports,\n  raw_transformations_exports\n];\nvar cld;\nfunction constructCloudinaryUrl({ options, config, analytics }) {\n  if (!cld) {\n    cld = new Cloudinary(config);\n  }\n  if (!(options == null ? void 0 : options.src)) {\n    throw Error(`Failed to construct Cloudinary URL: Missing source (src) in options`);\n  }\n  const parsedOptions = {\n    seoSuffix: void 0,\n    version: void 0\n  };\n  let publicId;\n  if (options.src.startsWith(\"https://\")) {\n    try {\n      const parts = parseUrl(options.src);\n      publicId = parts == null ? void 0 : parts.publicId;\n      parsedOptions.seoSuffix = parts == null ? void 0 : parts.seoSuffix;\n      parsedOptions.version = parts == null ? void 0 : parts.version;\n    } catch (e) {\n    }\n  }\n  if (!publicId) {\n    publicId = options.src;\n  }\n  Object.keys(parsedOptions).forEach((key) => {\n    if (objectHasKey3(options, key))\n      return;\n    options[key] = parsedOptions[key];\n  });\n  const cldImage = cld.image(publicId);\n  transformationPlugins.forEach(({ plugin: plugin12 }) => {\n    const results = plugin12({\n      cldImage,\n      options\n    });\n    const { options: pluginOptions } = results || { options: void 0 };\n    if ((pluginOptions == null ? void 0 : pluginOptions.format) && options) {\n      options.format = pluginOptions.format;\n    }\n    if ((pluginOptions == null ? void 0 : pluginOptions.width) && options) {\n      options.resize = {\n        width: pluginOptions == null ? void 0 : pluginOptions.width\n      };\n    }\n  });\n  if (options == null ? void 0 : options.resize) {\n    const { width, crop = \"scale\" } = options.resize;\n    cldImage.effect(`c_${crop},w_${width}`);\n  }\n  return cldImage.setDeliveryType((options == null ? void 0 : options.deliveryType) || \"upload\").format((options == null ? void 0 : options.format) || \"auto\").delivery(`q_${(options == null ? void 0 : options.quality) || \"auto\"}`).toURL({\n    trackedAnalytics: analytics\n  });\n}\nexport {\n  constructCloudinaryUrl,\n  effects,\n  position,\n  primary,\n  text,\n  transformationPlugins\n};\n","/**\n * pollForProcessingImage\n */\n\nexport async function pollForProcessingImage(options): Promise<boolean> {\n  const { src } = options;\n  try {\n    await new Promise((resolve, reject) => {\n      fetch(src).then(res => {\n        if ( !res.ok ) {\n          reject(res);\n          return;\n        }\n        resolve(res);\n      });\n    });\n  } catch(e: any) {\n    if ( e.status === 423 ) {\n      return await pollForProcessingImage(options);\n    }\n    return false;\n  }\n  return true;\n}","import nextPkg from 'next/package.json';\nimport pkg from '../../package.json';\n\nexport const NEXT_CLOUDINARY_ANALYTICS_ID = 'V';\nexport const NEXT_CLOUDINARY_VERSION = pkg.version;\nexport const NEXT_VERSION = nextPkg.version;","{\n  \"name\": \"next-cloudinary\",\n  \"version\": \"3.4.0\",\n  \"main\": \"./dist/index.js\",\n  \"module\": \"./dist/index.mjs\",\n  \"types\": \"./dist/index.d.ts\",\n  \"source\": \"src/index.ts\",\n  \"scripts\": {\n    \"build\": \"tsup src/index.ts --dts\",\n    \"dev\": \"tsup src/index.ts --watch --dts\",\n    \"prepublishOnly\": \"cp ../README.md . && yarn build\",\n    \"postpublish\": \"rm ./README.md\",\n    \"test\": \"jest\",\n    \"test:app\": \"NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME=\\\"test\\\" yarn build && cd tests/nextjs-app && yarn build\"\n  },\n  \"dependencies\": {\n    \"@cloudinary-util/url-loader\": \"^2.0.0\",\n    \"@cloudinary-util/util\": \"^2.0.0\",\n    \"@cloudinary/url-gen\": \"^1.8.6\"\n  },\n  \"devDependencies\": {\n    \"@babel/core\": \"^7.19.6\",\n    \"@babel/preset-env\": \"^7.19.4\",\n    \"@types/jest\": \"^29.2.0\",\n    \"@types/react\": \"^18.0.28\",\n    \"@types/react-dom\": \"^18.0.11\",\n    \"babel-jest\": \"^29.2.2\",\n    \"dotenv\": \"^16.0.3\",\n    \"jest\": \"^29.2.2\",\n    \"jest-environment-jsdom\": \"^29.2.2\",\n    \"ts-jest\": \"^29.0.3\",\n    \"tsup\": \"^6.6.3\",\n    \"typescript\": \"^4.9.4\"\n  },\n  \"peerDependencies\": {\n    \"next\": \"^12 || ^13\",\n    \"react\": \"^17 || ^18\"\n  }\n}\n","import { ImageProps } from 'next/image';\nimport { constructCloudinaryUrl } from '@cloudinary-util/url-loader';\n\nimport { NEXT_CLOUDINARY_ANALYTICS_ID, NEXT_CLOUDINARY_VERSION, NEXT_VERSION } from '../constants/analytics';\n\nexport interface CloudinaryLoaderCldOptions {\n  heightResize?: string | number;\n  widthResize?: string | number;\n}\n\nexport interface CloudinaryLoaderLoaderOptions {\n  height?: string | number;\n  width?: string | number;\n}\n\nexport interface CloudinaryLoader {\n  loaderOptions: CloudinaryLoaderLoaderOptions;\n  imageProps: ImageProps;\n  cldOptions: CloudinaryLoaderCldOptions;\n  cldConfig?: object;\n}\n\nexport function cloudinaryLoader({ loaderOptions, imageProps, cldOptions, cldConfig = {} }: CloudinaryLoader) {\n  const options = {\n    ...imageProps,\n    ...cldOptions\n  }\n\n  options.width = typeof options.width === 'string' ? parseInt(options.width) : options.width;\n  options.height = typeof options.height === 'string' ? parseInt(options.height) : options.height;\n\n  // The loader options are used to create dynamic sizing when working with responsive images\n  // so these should override the default options collected from the props alone if\n  // the results are different. While we don't always use the height in the loader logic,\n  // we always pass it here, as the usage is determined later based on cropping.js\n\n  if ( typeof loaderOptions?.width === 'number' && typeof options.width === 'number' && loaderOptions.width !== options.width ) {\n    const multiplier = loaderOptions.width / options.width;\n\n    options.widthResize = loaderOptions.width;\n\n    if ( typeof options.height === 'number' ) {\n      options.heightResize = Math.round(options.height * multiplier);\n    }\n  }\n\n  return constructCloudinaryUrl({\n    // @ts-expect-error\n    options,\n    config: {\n      cloud: {\n        cloudName: process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME\n      },\n      ...cldConfig\n    },\n    analytics: {\n      sdkCode: NEXT_CLOUDINARY_ANALYTICS_ID,\n      sdkSemver: NEXT_CLOUDINARY_VERSION,\n      techVersion: NEXT_VERSION,\n      feature: ''\n    }\n  });\n}","import React from 'react';\nimport Head from 'next/head';\nimport { constructCloudinaryUrl } from '@cloudinary-util/url-loader';\n\nimport { NEXT_CLOUDINARY_ANALYTICS_ID, NEXT_CLOUDINARY_VERSION, NEXT_VERSION } from '../../constants/analytics';\n\nconst IMAGE_WIDTH = 2400;\nconst IMAGE_HEIGHT = 1200;\n\nconst TWITTER_CARD = 'summary_large_image';\n\nexport interface CldOgImageProps {\n  alt: string;\n  crop?: string;\n  excludeTags?: Array<string>;\n  gravity?: string;\n  height: string | number;\n  src: string;\n  twitterTitle?: string;\n  width: string | number;\n}\n\nconst CldOgImage = ({ excludeTags = [], twitterTitle, ...props }: CldOgImageProps) => {\n  const options = {\n    ...props,\n    alt: props.alt,\n    crop: props.crop || 'fill',\n    gravity: props.gravity || 'center',\n    height: props.height || IMAGE_HEIGHT,\n    src: props.src,\n    width: props.width || IMAGE_WIDTH,\n  }\n\n  const ogImageUrl = constructCloudinaryUrl({\n    options,\n    config: {\n      cloud: {\n        cloudName: process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME\n      }\n    },\n    analytics: {\n      sdkCode: NEXT_CLOUDINARY_ANALYTICS_ID,\n      sdkSemver: NEXT_CLOUDINARY_VERSION,\n      techVersion: NEXT_VERSION,\n      feature: ''\n    }\n  });\n\n  // We need to include the tags within the Next.js Head component rather than\n  // direcly adding them inside of the Head otherwise we get unexpected results\n\n    return (\n    <Head>\n      <meta property=\"og:image\" content={ogImageUrl} />\n      <meta property=\"og:image:secure_url\" content={ogImageUrl} />\n      <meta property=\"og:image:width\" content={`${options.width}`} />\n      <meta property=\"og:image:height\" content={`${options.height}`} />\n\n      {options.alt && (\n        <meta property=\"og:image:alt\" content={options.alt} />\n      )}\n\n      {/* Required for summary_large_image, exclude vai excludeTags */}\n      {/* https://developer.twitter.com/en/docs/twitter-for-websites/cards/overview/summary-card-with-large-image */}\n\n      {!excludeTags.includes('twitter:title') && (\n        <meta property=\"twitter:title\" content={twitterTitle || ' '} />\n      )}\n\n      <meta property=\"twitter:card\" content={TWITTER_CARD} />\n      <meta property=\"twitter:image\" content={ogImageUrl} />\n    </Head>\n  );\n}\n\nexport default CldOgImage;","import React from 'react';\nimport CldUploadWidget, { CldUploadWidgetProps } from '../CldUploadWidget';\n\nexport interface CldUploadButtonProps extends Omit<CldUploadWidgetProps, 'children'> {\n  children?: JSX.Element | string | Array<JSX.Element|string>;\n  onClick?: Function;\n}\n\nconst CldUploadButton = ({\n  children,\n  onClick,\n  onError,\n  onUpload,\n  options,\n  signatureEndpoint,\n  uploadPreset,\n  ...props\n}: CldUploadButtonProps) => {\n  return (\n    <>\n      <CldUploadWidget\n        onError={onError}\n        onUpload={onUpload}\n        options={options}\n        signatureEndpoint={signatureEndpoint}\n        uploadPreset={uploadPreset}\n      >\n        {({ open }) => {\n          function handleOnClick(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\n            e.preventDefault();\n\n            open();\n\n            if ( typeof onClick === 'function' ) {\n              onClick(e);\n            }\n          }\n          return (\n            <button {...props} onClick={handleOnClick} >\n              {children || 'Upload'}\n            </button>\n          );\n        }}\n      </CldUploadWidget>\n    </>\n  );\n};\n\nexport default CldUploadButton;\n","import React, { useState, useEffect, useRef } from 'react';\nimport Script from 'next/script';\n\nimport { triggerOnIdle } from '../../lib/util';\n\nimport { CldUploadWidgetProps, CldUploadWidgetResults } from './CldUploadWidget.types';\n\nconst WIDGET_WATCHED_EVENTS = [\n  'success',\n  'display-changed'\n];\n\nconst CldUploadWidget = ({\n  children,\n  onClose,\n  onError,\n  onOpen,\n  onUpload,\n  options,\n  signatureEndpoint,\n  uploadPreset,\n}: CldUploadWidgetProps) => {\n  const cloudinary: any = useRef();\n  const widget: any = useRef();\n\n  const signed = !!signatureEndpoint;\n\n  const [error, setError] = useState(undefined);\n  const [results, setResults] = useState<CldUploadWidgetResults | undefined>(undefined);\n\n  // Read the results and handle component callbacks based on\n  // the the event. The results should only be updated based\n  // on the watched event IDs in WIDGET_WATCHED_EVENTS to avoid\n  // too many repetitive state changes (consequently skipping some)\n\n  useEffect(() => {\n    if ( typeof results === 'undefined' ) return;\n\n    const isSuccess = results.event === 'success';\n    const isClosed = results.event === 'display-changed' && results.info === 'hidden';\n\n    if ( isSuccess && typeof onUpload === 'function' ) {\n      onUpload(results, widget.current);\n    }\n\n    if ( isClosed && typeof onClose === 'function' ) {\n      onClose(widget.current);\n    }\n  }, [results])\n\n  useEffect(() => {\n    if ( error && typeof onError === 'function' ) {\n      onError(error, widget.current);\n    }\n  }, [error]);\n\n  /**\n   * handleOnLoad\n   * @description Stores the Cloudinary window instance to a ref when the widget script loads\n   */\n\n  function handleOnLoad() {\n    if ( !cloudinary.current ) {\n      cloudinary.current = (window as any).cloudinary;\n    }\n\n    // To help improve load time of the widget on first instance, use requestIdleCallback\n    // to trigger widget creation. Optional.\n\n    triggerOnIdle(() => {\n      if ( !widget.current ) {\n        widget.current = createWidget();\n      }\n    });\n  }\n\n  /**\n   * generateSignature\n   * @description Makes a request to an endpoint to sign Cloudinary parameters as part of widget creation\n   */\n\n  function generateSignature(callback: Function, paramsToSign: object) {\n    if ( typeof signatureEndpoint === 'undefined' ) {\n      throw Error('Failed to generate signature: signatureEndpoint undefined.')\n    }\n    fetch(signatureEndpoint, {\n      method: 'POST',\n      body: JSON.stringify({\n        paramsToSign,\n      }),\n    })\n      .then((r) => r.json())\n      .then(({ signature }) => {\n        callback(signature);\n      });\n  }\n\n  /**\n   * createWidget\n   * @description Creates a new instance of the Cloudinary widget and stores in a ref\n   */\n\n  function createWidget() {\n    // When creating a signed upload, you need to provide both your Cloudinary API Key\n    // as well as a signature generator function that will sign any paramters\n    // either on page load or during the upload process. Read more about signed uploads at:\n    // https://cloudinary.com/documentation/upload_widget#signed_uploads\n\n    const uploadOptions = {\n      cloudName: process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME,\n      uploadPreset: uploadPreset || process.env.NEXT_PUBLIC_CLOUDINARY_UPLOAD_PRESET,\n      apiKey: process.env.NEXT_PUBLIC_CLOUDINARY_API_KEY,\n      ...options,\n    };\n\n    if ( signed ) {\n      uploadOptions.uploadSignature = generateSignature;\n\n      // No need for apiSecret here because of api/sign-cloudinary-params\n\n      if (!uploadOptions.apiKey) {\n        return new Error(\"Signed Upload needs apiKey!\");\n      }\n    }\n\n    return cloudinary.current?.createUploadWidget(uploadOptions, (uploadError: any, uploadResult: any) => {\n      // The callback is a bit more chatty than failed or success so\n      // only trigger when one of those are the case. You can additionally\n      // create a separate handler such as onEvent and trigger it on\n      // ever occurrence\n\n      if ( typeof uploadError !== 'undefined' ) {\n        setError(uploadError);\n      }\n\n      if ( WIDGET_WATCHED_EVENTS.includes(uploadResult?.event) ) {\n        setResults(uploadResult);\n      }\n    });\n  }\n\n  /**\n   * open\n   * @description When triggered, uses the current widget instance to open the upload modal\n   */\n\n  function open() {\n    if (!widget.current) {\n      widget.current = createWidget();\n    }\n\n    widget?.current.open();\n\n    if ( typeof onOpen === 'function' ) {\n      onOpen(widget.current);\n    }\n  }\n\n  return (\n    <>\n      {typeof children === 'function' && children({\n        cloudinary: cloudinary.current,\n        widget: widget.current,\n        open,\n        results,\n        error\n      })}\n      <Script\n        id={`cloudinary-uploadwidget-${Math.floor(Math.random() * 100)}`}\n        src=\"https://widget.cloudinary.com/v2.0/global/all.js\"\n        onLoad={handleOnLoad}\n        onError={(e) => console.error(`Failed to load Cloudinary Upload Widget: ${e.message}`)}\n      />\n    </>\n  );\n};\n\nexport default CldUploadWidget;\n","/**\n * triggerOnIdle\n * @see MDN Polyfill https://github.com/behnammodi/polyfill/blob/master/window.polyfill.js#L7-L24\n */\n\nexport function triggerOnIdle(callback: any) {\n  if ( window && 'requestIdleCallback' in window ) {\n    return requestIdleCallback(callback);\n  }\n  return setTimeout(() => callback(), 1);\n}","import React, { useRef, MutableRefObject } from 'react';\nimport Script from 'next/script';\nimport Head from 'next/head';\n\nimport { CldVideoPlayerProps } from './CldVideoPlayer.types';\nimport { CloudinaryVideoPlayer } from '../../types/player';\n\n\nconst CldVideoPlayer = (props: CldVideoPlayerProps) => {\n  const {\n    autoPlay = 'never',\n    colors,\n    controls = true,\n    fontFace,\n    height,\n    id,\n    logo = true,\n    loop = false,\n    muted = false,\n    onDataLoad,\n    onError,\n    onMetadataLoad,\n    onPause,\n    onPlay,\n    onEnded,\n    src,\n    version = '1.9.4',\n    width,\n  } = props as CldVideoPlayerProps;\n\n  // Setup the refs and allow for the caller to pass through their\n  // own ref instance\n\n  const cloudinaryRef = useRef<any>();\n  const defaultVideoRef = useRef() as MutableRefObject<HTMLVideoElement | null>;\n  const videoRef = props.videoRef || defaultVideoRef;\n  const defaultPlayerRef = useRef()as MutableRefObject<CloudinaryVideoPlayer | null>;\n  const playerRef = props.playerRef || defaultPlayerRef;\n\n  const playerId = id || `player-${src.replace('/', '-')}`;\n\n  const events: Record<string, Function|undefined> = {\n    error: onError,\n    loadeddata: onDataLoad,\n    loadedmetadata: onMetadataLoad,\n    pause: onPause,\n    play: onPlay,\n    ended: onEnded\n  };\n\n  /**\n   * handleEvent\n   * @description Event handler for all player events\n   */\n\n  function handleEvent(event: { type: 'string' }) {\n    const activeEvent = events[event.type];\n\n    if ( typeof activeEvent === 'function' ) {\n      activeEvent(getPlayerRefs());\n    }\n  }\n\n  /**\n   * handleOnLoad\n   * @description Stores the Cloudinary window instance to a ref when the widget script loads\n   */\n\n  function handleOnLoad() {\n    if ( 'cloudinary' in window ) {\n      cloudinaryRef.current = window.cloudinary;\n\n      interface LogoOptions {\n        logoImageUrl?: string;\n        logoOnclickUrl?: string;\n        showLogo?: boolean;\n      }\n\n      let logoOptions: LogoOptions = {};\n\n      if ( typeof logo === 'boolean' ) {\n        logoOptions.showLogo = logo;\n      } else if ( typeof logo === 'object' ) {\n        logoOptions = {\n          ...logoOptions,\n          showLogo: true,\n          logoImageUrl: logo.imageUrl,\n          logoOnclickUrl: logo.onClickUrl\n        }\n      }\n\n      playerRef.current = cloudinaryRef.current.videoPlayer(videoRef.current, {\n        autoplayMode: autoPlay,\n        cloud_name: process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME,\n        color: colors,\n        controls,\n        fontFace: fontFace || '',\n        loop,\n        muted,\n        publicId: src,\n        secure: true,\n        ...logoOptions\n      });\n\n      Object.keys(events).forEach((key) => {\n        if ( typeof events[key] === 'function' ) {\n          playerRef.current?.on(key, handleEvent);\n        }\n      });\n    }\n  }\n\n  /**\n   *\n   */\n\n  function getPlayerRefs() {\n    return {\n      player: playerRef.current,\n      video: videoRef.current\n    }\n  }\n\n  return (\n    <>\n      <Head>\n        <link href={`https://unpkg.com/cloudinary-video-player@${version}/dist/cld-video-player.min.css`} rel=\"stylesheet\" />\n      </Head>\n      <div style={{ width: '100%', aspectRatio: `${props.width} / ${props.height}`}}>\n        <video\n          ref={videoRef}\n          id={playerId}\n          className=\"cld-video-player cld-fluid\"\n          width={width}\n          height={height}\n        />\n        <Script\n          id={`cloudinary-videoplayer-${Math.floor(Math.random() * 100)}`}\n          src={`https://unpkg.com/cloudinary-video-player@${version}/dist/cld-video-player.min.js`}\n          onLoad={handleOnLoad}\n          onError={(e) => console.error(`Failed to load Cloudinary Video Player: ${e.message}`)}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default CldVideoPlayer;"],"mappings":"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","names":["React","useState","Image","REGEX_VERSION","REGEX_URL","ASSET_TYPES_SEO","parseUrl","src","_a","_b","_c","_d","baseUrl","queryString","results","transformations","t","parts","prev","curr","key","value","publicIdParts","getTransformations","src","transformations","parseUrl","t","encodeBase64","value","objectHasKey","obj","key","sortByKey","array","type","compare","b","keyA","keyB","newArray","isObject","a","Config","userProvidedConfig","validKeys","obj","key","BaseConfig_default","ALLOWED_URL_CONFIG","URLConfig","BaseConfig_default","userURLConfig","urlConfig","ALLOWED_URL_CONFIG","value","URLConfig_default","QualifierValue","qualifierValue","v","value","delimiter","UnsupportedError","message","createUnsupportedError","qualifierToJson","createUnsupportedError","QualifierModel","qualifierToJson","Qualifier","QualifierModel","key","qualifierValue","QualifierValue","delimiter","value","FlagQualifier","Qualifier","flagType","flagValue","qualifierValue","QualifierValue","mapToSortedArray","map","flags","array","flag","v","actionToJson","createUnsupportedError","ActionModel","actionToJson","Action","ActionModel","tag","mapToSortedArray","qualifier","key","value","FlagQualifier","Qualifier","flag","qualifierKey","qualifierValue","BackgroundColor","Action","color","Qualifier","QualifierValue","prepareColor","color","RawAction","raw","createUnsupportedError","isErrorObject","obj","errorObj","lossy","FlagQualifier","preserveTransparency","FlagQualifier","progressive","mode","FormatQualifier","QualifierValue","val","objectFlip","obj","result","key","ACTION_TYPE_TO_CROP_MODE_MAP","ACTION_TYPE_TO_DELIVERY_MODE_MAP","ACTION_TYPE_TO_EFFECT_MODE_MAP","ACTION_TYPE_TO_QUALITY_MODE_MAP","ACTION_TYPE_TO_STREAMING_PROFILE_MODE_MAP","CHROMA_VALUE_TO_CHROMA_MODEL_ENUM","COLOR_SPACE_MODEL_MODE_TO_COLOR_SPACE_MODE_MAP","CHROMA_MODEL_ENUM_TO_CHROMA_VALUE","objectFlip","CHROMA_VALUE_TO_CHROMA_MODEL_ENUM","COLOR_SPACE_MODE_TO_COLOR_SPACE_MODEL_MODE_MAP","COLOR_SPACE_MODEL_MODE_TO_COLOR_SPACE_MODE_MAP","CROP_MODE_TO_ACTION_TYPE_MAP","ACTION_TYPE_TO_CROP_MODE_MAP","DELIVERY_MODE_TO_ACTION_TYPE_MAP","ACTION_TYPE_TO_DELIVERY_MODE_MAP","EFFECT_MODE_TO_ACTION_TYPE_MAP","ACTION_TYPE_TO_EFFECT_MODE_MAP","QUALITY_MODE_TO_ACTION_TYPE_MAP","ACTION_TYPE_TO_QUALITY_MODE_MAP","STREAMING_PROFILE_TO_ACTION_TYPE_MAP","ACTION_TYPE_TO_STREAMING_PROFILE_MODE_MAP","DeliveryAction","Action","deliveryKey","deliveryType","modelProperty","deliveryTypeValue","FormatQualifier","DELIVERY_MODE_TO_ACTION_TYPE_MAP","Qualifier","ProgressiveQualifier","FlagQualifier","mode","DeliveryFormatAction","DeliveryAction","deliveryKey","deliveryType","lossy","mode","ProgressiveQualifier","progressive","preserveTransparency","actionModel","formatType","result","Transformation","action","actionToAdd","RawAction","tx","a","animatedAction","borderAction","reshapeAction","resizeAction","quality","DeliveryFormatAction","format","roundCornersAction","overlayAction","underlayAction","variableAction","conditionAction","effectAction","rotateAction","namedTransformation","deliveryAction","color","BackgroundColor","prepareColor","flagQualifier","Action","flagToAdd","FlagQualifier","customFunction","actions","json","isErrorObject","ImageTransformation","Transformation","VideoTransformation","Transformation","isUrl","publicID","isFileName","publicID","publicIDContainsVersion","publicID","getUrlPrefix","cloudName","urlConfig","secure","privateCDN","cname","secureDistribution","handleAssetType","assetType","handleDeliveryType","deliveryType","getUrlVersion","publicID","version","forceVersion","shouldForceVersion","publicIDContainsVersion","isUrl","isFileName","stringPad","value","_targetLength","_padString","targetLength","padString","repeatStringNumTimes","string","_times","times","repeatedString","chars","base64Map","num","char","key","stringPad","reverseVersion","semVer","segment","asNumber","stringPad","encodeVersion","semVer","strResult","paddedStringLength","paddedReversedSemver","reverseVersion","paddedBinary","stringPad","bitString","base64Map","getAnalyticsOptions","options","analyticsOptions","packageVersion","getNodeVersion","failedVersion","ensureShapeOfTrackedProperties","trackedAnalytics","defaults","packageVersion","getSDKAnalyticsSignature","_trackedAnalytics","analyticsOptions","getAnalyticsOptions","twoPartVersion","removePatchFromSemver","encodedSDKVersion","encodeVersion","encodedTechVersion","featureCode","e","semVerStr","parts","SEO_TYPES","CloudinaryFile","publicID","cloudConfig","urlConfig","URLConfig_default","newType","newSuffix","signature","newVersion","overwriteOptions","suffixContainsDot","suffixContainsSlash","assetType","handleAssetType","deliveryType","handleDeliveryType","hasSuffix","regularSEOType","shortSEOType","useRootPath","shorten","transformation","trackedAnalytics","prefix","getUrlPrefix","transformationString","version","getUrlVersion","url","a","safeURL","getSDKAnalyticsSignature","CloudinaryTransformable","CloudinaryFile","publicID","cloudConfig","urlConfig","transformation","animated","border","reshape","resize","quality","DeliveryFormatAction","format","roundCorners","overlayAction","variableAction","conditionalAction","effect","action","rotate","namedTransformation","deliveryAction","color","flagQualifier","customFunction","tx","underlayAction","overwriteOptions","CloudinaryImage","CloudinaryTransformable","publicID","cloudConfig","urlConfig","ImageTransformation","CloudinaryVideo","CloudinaryTransformable","publicID","cloudConfig","urlConfig","VideoTransformation","action","Cloudinary","cloudinaryConfig","publicID","CloudinaryImage","CloudinaryVideo","__defProp","__export","target","all","name","cropping_exports","plugin","props","cropsGravityAuto","cropsWithZoom","props12","cldImage","options","width","height","widthResize","crop","overrides","transformationString","effects_exports","plugin2","props2","primary","position","text","effects","flags","constructTransformation","prefix","qualifier","value","transformation","constructTransformationString","t","effectsSet","effects2","options2","key","sanitize_exports","plugin3","props3","sanitize","overlays_exports","DEFAULT_TEXT_OPTIONS","plugin4","props4","text2","overlays","type","typeQualifier","applyOverlay","publicId","url","position2","text3","layerEffects","appliedEffects","hasPublicId","hasUrl","hasText","hasPosition","layerTransformation","encodeBase64","primary2","applied","objectHasKey","effect","textTransformations","textOptions","sortedTextOptions","sortByKey","textOption","location","named_transformations_exports","plugin5","props5","transformations","raw_transformations_exports","plugin6","props6","rawTransformations","remove_background_exports","plugin7","props7","removeBackground","seo_exports","plugin8","props8","seoSuffix","underlays_exports","plugin9","props9","underlay","underlays","applyUnderlay","flags2","version_exports","plugin10","props10","version","zoompan_exports","plugin11","props11","zoompan","zoompanEffect","loopEffect","transformationPlugins","cld","constructCloudinaryUrl","config","analytics","Cloudinary","parsedOptions","parts","parseUrl","e","plugin12","results","pluginOptions","pollForProcessingImage","options","src","resolve","reject","res","e","nextPkg","package_default","NEXT_CLOUDINARY_ANALYTICS_ID","NEXT_CLOUDINARY_VERSION","package_default","NEXT_VERSION","nextPkg","cloudinaryLoader","loaderOptions","imageProps","cldOptions","cldConfig","options","multiplier","constructCloudinaryUrl","NEXT_CLOUDINARY_ANALYTICS_ID","NEXT_CLOUDINARY_VERSION","NEXT_VERSION","CldImage","props","CLD_OPTIONS","transformationPlugins","prop","imageProps","key","defaultImgKey","imgKey","setImgKey","useState","cldOptions","transformations","getTransformations","e","handleOnError","options","pollForProcessingImage","React","Image","loaderOptions","cloudinaryLoader","CldImage_default","React","Head","IMAGE_WIDTH","IMAGE_HEIGHT","TWITTER_CARD","CldOgImage","excludeTags","twitterTitle","props","options","ogImageUrl","constructCloudinaryUrl","NEXT_CLOUDINARY_ANALYTICS_ID","NEXT_CLOUDINARY_VERSION","NEXT_VERSION","React","Head","CldOgImage_default","React","React","useState","useEffect","useRef","Script","triggerOnIdle","callback","WIDGET_WATCHED_EVENTS","CldUploadWidget","children","onClose","onError","onOpen","onUpload","options","signatureEndpoint","uploadPreset","cloudinary","useRef","widget","signed","error","setError","useState","results","setResults","useEffect","isSuccess","isClosed","handleOnLoad","triggerOnIdle","createWidget","generateSignature","callback","paramsToSign","r","signature","_a","uploadOptions","uploadError","uploadResult","open","React","Script","e","CldUploadWidget_default","CldUploadButton","children","onClick","onError","onUpload","options","signatureEndpoint","uploadPreset","props","React","CldUploadWidget_default","open","handleOnClick","e","CldUploadButton_default","React","useRef","Script","Head","CldVideoPlayer","props","autoPlay","colors","controls","fontFace","height","id","logo","loop","muted","onDataLoad","onError","onMetadataLoad","onPause","onPlay","onEnded","src","version","width","cloudinaryRef","defaultVideoRef","videoRef","defaultPlayerRef","playerRef","playerId","events","handleEvent","event","activeEvent","getPlayerRefs","handleOnLoad","logoOptions","key","_a","e","CldVideoPlayer_default"]}